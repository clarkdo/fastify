TAP version 13
ok 1 - test/404s.test.js # time=9537.22ms {
    # Subtest: default 404
        1..3
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=35.064ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - unsupported route # time=13.763ms
        
    ok 1 - default 404 # time=353.601ms
    
    # Subtest: customized 404
        1..5
        ok 1 - should not error
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - unsupported method # time=12.205ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - unsupported route # time=3.979ms
        
        # Subtest: with error object
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - with error object # time=4.592ms
        
        # Subtest: error object with headers property
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 5 - error object with headers property # time=7.806ms
        
    ok 2 - customized 404 # time=45.553ms
    
    # Subtest: custom header in notFound handler
        1..2
        ok 1 - should not error
        # Subtest: not found with custom header
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - not found with custom header # time=9.732ms
        
    ok 3 - custom header in notFound handler # time=16.429ms
    
    # Subtest: setting a custom 404 handler multiple times is an error
        1..5
        # Subtest: at the root level
            1..2
            ok 1 - type is Error
            ok 2 - should be equal
        ok 1 - at the root level # time=3.645ms
        
        # Subtest: at the plugin level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 2 - at the plugin level # time=29.585ms
        
        # Subtest: at multiple levels
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 3 - at multiple levels # time=6.553ms
        
        # Subtest: at multiple levels / 2
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 4 - at multiple levels / 2 # time=26.405ms
        
        # Subtest: in separate plugins at the same level
            1..3
            ok 1 - type is Error
            ok 2 - should be equal
            ok 3 - should not error
        ok 5 - in separate plugins at the same level # time=22.711ms
        
    ok 4 - setting a custom 404 handler multiple times is an error # time=110.677ms
    
    # Subtest: encapsulated 404
        1..9
        ok 1 - should not error
        # Subtest: root unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 2 - root unsupported method # time=22.228ms
        
        # Subtest: root insupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 3 - root insupported route # time=9.543ms
        
        # Subtest: unsupported method
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 4 - unsupported method # time=5.049ms
        
        # Subtest: unsupported route
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 5 - unsupported route # time=7.041ms
        
        # Subtest: unsupported method bis
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 6 - unsupported method bis # time=12.969ms
        
        # Subtest: unsupported route bis
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 7 - unsupported route bis # time=9.593ms
        
        # Subtest: unsupported method 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 8 - unsupported method 3 # time=9.264ms
        
        # Subtest: unsupported route 3
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
        ok 9 - unsupported route 3 # time=26.322ms
        
    ok 5 - encapsulated 404 # time=135.638ms
    
    # Subtest: custom 404 hook and handler context
        1..21
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should not error
        ok 20 - should be equal
        ok 21 - should be equal
    ok 6 - custom 404 hook and handler context # time=25.289ms
    
    # Subtest: encapsulated custom 404 without - prefix hook and handler context
        1..13
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 7 - encapsulated custom 404 without - prefix hook and handler context # time=12.532ms
    
    # Subtest: run hooks and middleware on default 404
        1..8
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - middleware called
        ok 4 - preHandler called
        ok 5 - onSend called
        ok 6 - onResponse called
        ok 7 - should not error
        ok 8 - should be equal
    ok 8 - run hooks and middleware on default 404 # time=21.397ms
    
    # Subtest: run non-encapsulated plugin hooks and middleware on default 404
        1..7
        ok 1 - onRequest called
        ok 2 - middleware called
        ok 3 - preHandler called
        ok 4 - onSend called
        ok 5 - onResponse called
        ok 6 - should not error
        ok 7 - should be equal
    ok 9 - run non-encapsulated plugin hooks and middleware on default 404 # time=30.186ms
    
    # Subtest: run non-encapsulated plugin hooks and middleware on custom 404
        1..13
        ok 1 - onRequest called
        ok 2 - onRequest called
        ok 3 - middleware called
        ok 4 - middleware called
        ok 5 - preHandler called
        ok 6 - preHandler called
        ok 7 - onSend called
        ok 8 - onSend called
        ok 9 - onResponse called
        ok 10 - onResponse called
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
    ok 10 - run non-encapsulated plugin hooks and middleware on custom 404 # time=14.411ms
    
    # Subtest: run hooks and middleware with encapsulated 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest called
        ok 3 - onRequest 2 called
        ok 4 - middleware called
        ok 5 - middleware 2 called
        ok 6 - preHandler called
        ok 7 - preHandler 2 called
        ok 8 - onSend called
        ok 9 - onSend 2 called
        ok 10 - onResponse called
        ok 11 - onResponse 2 called
        ok 12 - should not error
        ok 13 - should be equal
    ok 11 - run hooks and middleware with encapsulated 404 # time=24.714ms
    
    # Subtest: run middlewares on default 404
        1..4
        ok 1 - should not error
        ok 2 - middleware called
        ok 3 - should not error
        ok 4 - should be equal
    ok 12 - run middlewares on default 404 # time=10.191ms
    
    # Subtest: run middlewares with encapsulated 404
        1..5
        ok 1 - should not error
        ok 2 - middleware called
        ok 3 - middleware 2 called
        ok 4 - should not error
        ok 5 - should be equal
    ok 13 - run middlewares with encapsulated 404 # time=14.065ms
    
    # Subtest: hooks check 404
        1..13
        ok 1 - should not error
        ok 2 - onRequest
        ok 3 - should be equivalent
        ok 4 - onSend
        ok 5 - onResponse
        ok 6 - onRequest
        ok 7 - should be equivalent
        ok 8 - onSend
        ok 9 - onResponse
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should not error
        ok 13 - should be equal
    ok 14 - hooks check 404 # time=18.814ms
    
    # Subtest: setNotFoundHandler should not suppress duplicated routes checking
        1..1
        ok 1 - expect truthy value
    ok 15 - setNotFoundHandler should not suppress duplicated routes checking # time=7.737ms
    
    # Subtest: log debug for 404
        1..1
        # Subtest: log debug
            1..7
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equal
            ok 5 - should be equal
            ok 6 - should be equal
            ok 7 - should be equal
        ok 1 - log debug # time=11.75ms
        
    ok 16 - log debug for 404 # time=22.826ms
    
    # Subtest: Unknown method
        1..5
        ok 1 - should not error
        ok 2 - expected to throw
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent strictly
    ok 17 - Unknown method # time=13.012ms
    
    # Subtest: recognizes errors from the http-errors module
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent strictly
    ok 18 - recognizes errors from the http-errors module # time=14.672ms
    
    # Subtest: the default 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 19 - the default 404 handler can be invoked inside a prefixed plugin # time=5.959ms
    
    # Subtest: an inherited custom 404 handler can be invoked inside a prefixed plugin
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - an inherited custom 404 handler can be invoked inside a prefixed plugin # time=10.163ms
    
    # Subtest: encapsulated custom 404 handler without a prefix is the handler for the entire 404 level
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 21 - encapsulated custom 404 handler without a prefix is the handler for the entire 404 level # time=9.315ms
    
    # Subtest: cannot set notFoundHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 22 - cannot set notFoundHandler after binding # time=4.78ms
    
    # Subtest: 404 inside onSend
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 23 - 404 inside onSend # time=11.878ms
    
    # Subtest: Not found on supported method (should return a 404)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 24 - Not found on supported method (should return a 404) # time=9.334ms
    
    # Subtest: Not found on unsupported method (should return a 404)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 25 - Not found on unsupported method (should return a 404) # time=13.723ms
    
    # Subtest: onSend hooks run when an encapsulated route invokes the notFound handler
        1..3
        ok 1 - onSend hook called
        ok 2 - should not error
        ok 3 - should be equal
    ok 26 - onSend hooks run when an encapsulated route invokes the notFound handler # time=7.387ms
    
    # Subtest: preHandler option for setNotFoundHandler
        1..8
        # Subtest: preHandler option
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 1 - preHandler option # time=29.214ms
        
        # Subtest: preHandler option should be called after preHandler hook
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 2 - preHandler option should be called after preHandler hook # time=5.117ms
        
        # Subtest: preHandler option should be unique per prefix
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 3 - preHandler option should be unique per prefix # time=11.827ms
        
        # Subtest: preHandler option should handle errors
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - preHandler option should handle errors # time=4.714ms
        
        # Subtest: preHandler option should handle errors with custom status code
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - preHandler option should handle errors with custom status code # time=8.049ms
        
        # Subtest: preHandler option could accept an array of functions
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 6 - preHandler option could accept an array of functions # time=4.155ms
        
        # Subtest: preHandler option does not interfere with preHandler
            1..4
            ok 1 - should not error
            ok 2 - should be equivalent
            ok 3 - should not error
            ok 4 - should be equivalent
        ok 7 - preHandler option does not interfere with preHandler # time=11.548ms
        
        # Subtest: preHandler option should keep the context
            1..3
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 8 - preHandler option should keep the context # time=4.663ms
        
    ok 27 - preHandler option for setNotFoundHandler # time=91.752ms
    
    # Subtest: reply.notFound invoked the notFound handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 28 - reply.notFound invoked the notFound handler # time=9.407ms
    
    # Subtest: The custom error handler should be invoked after the custom not found handler
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - type is Error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 29 - The custom error handler should be invoked after the custom not found handler # time=5.923ms
    
    # Subtest: If the custom not found handler does not use an Error, the custom error handler should not be called
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 30 - If the custom not found handler does not use an Error, the custom error handler should not be called # time=7.089ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 31 - preValidation option # time=8.883ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 32 - preValidation option could accept an array of functions # time=7.846ms
    
    # Subtest: Should fail to invoke callNotFound inside a 404 handler
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 33 - Should fail to invoke callNotFound inside a 404 handler # time=9.616ms
    
    1..33
    # time=1283.703ms
}

ok 2 - test/500s.test.js # time=8489.612ms {
    # Subtest: default 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 500 # time=104.145ms
    
    # Subtest: custom 500
        1..6
        ok 1 - type is object
        ok 2 - type is _Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - custom 500 # time=16.169ms
    
    # Subtest: encapsulated 500
        1..10
        ok 1 - type is object
        ok 2 - type is _Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 3 - encapsulated 500 # time=11.301ms
    
    # Subtest: custom 500 with hooks
        1..7
        ok 1 - onRequest
        ok 2 - onSend
        ok 3 - onResponse
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - custom 500 with hooks # time=16.682ms
    
    # Subtest: cannot set errorHandler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 5 - cannot set errorHandler after binding # time=54.064ms
    
    1..5
    # time=342.422ms
}

ok 3 - test/async-await.test.js # time=10085.237ms {
    # Subtest: async await
        1..11
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 1 - async await # time=418.968ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=18.115ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=10.865ms
    
    # Subtest: server logs an error if reply.send is called and a value is returned via async/await
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should be equal
    ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=23.353ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=11.273ms
    
    # Subtest: ignore the result of the promise if reply.send is called beforehand (object)
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=11.629ms
    
    # Subtest: support reply decorators with await
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 7 - support reply decorators with await # time=9.768ms
    
    # Subtest: support 204
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - support 204 # time=4.497ms
    
    # Subtest: inject async await
        1..1
        ok 1 - should be equivalent
    ok 9 - inject async await # time=9.07ms
    
    # Subtest: inject async await - when the server is up
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 10 - inject async await - when the server is up # time=205.935ms
    
    # Subtest: async await plugin
        1..1
        ok 1 - should be equivalent
    ok 11 - async await plugin # time=214.468ms
    
    # Subtest: does not call reply.send() twice if 204 reponse is already sent
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - does not call reply.send() twice if 204 reponse is already sent # time=13.277ms
    
    # Subtest: error is logged because promise was fulfilled with undefined
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 13 - error is logged because promise was fulfilled with undefined # time=517.191ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but statusCode 204 was set
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 14 - error is not logged because promise was fulfilled with undefined but statusCode 204 was set # time=30.267ms
    
    # Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=32.425ms
    
    # Subtest: Thrown Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - Thrown Error instance sets HTTP status code # time=30.04ms
    
    # Subtest: customErrorHandler support
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - customErrorHandler support # time=20.401ms
    
    # Subtest: customErrorHandler support without throwing
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - customErrorHandler support without throwing # time=18.084ms
    
    1..18
    # time=1790.611ms
}

ok 4 - test/bodyLimit.test.js # time=8942.281ms {
    # Subtest: bodyLimit
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should not error
        ok 5 - should be equal
    ok 1 - bodyLimit # time=103.779ms
    
    1..1
    # time=223.975ms
}

ok 5 - test/case-insensitive.test.js # time=8488.585ms {
    # Subtest: case insensitive
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - case insensitive # time=139.099ms
    
    # Subtest: case insensitive inject
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - case insensitive inject # time=21.391ms
    
    # Subtest: case insensitive (parametric)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 3 - case insensitive (parametric) # time=15.146ms
    
    # Subtest: case insensitive (wildcard)
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 4 - case insensitive (wildcard) # time=11.959ms
    
    1..4
    # time=285.184ms
}

ok 6 - test/chainable.test.js # time=8255.75ms {
    # Subtest: chainable - get
        1..1
        ok 1 - type is [object Object]
    ok 1 - chainable - get # time=11.533ms
    
    # Subtest: chainable - post
        1..1
        ok 1 - type is [object Object]
    ok 2 - chainable - post # time=5.104ms
    
    # Subtest: chainable - route
        1..1
        ok 1 - type is [object Object]
    ok 3 - chainable - route # time=1.197ms
    
    1..3
    # time=156.516ms
}

ok 7 - test/close-pipelining.test.js # time=16788.573ms {
    # Subtest: Should return 503 while closing - pipelining
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        1..10
    ok 1 - Should return 503 while closing - pipelining # time=8087.568ms
    
    1..1
    # time=8284.972ms
}

ok 8 - test/close.test.js # time=8639.708ms {
    # Subtest: close callback
        1..4
        ok 1 - should not error
        ok 2 - type is [object Object]
        ok 3 - should not error
        ok 4 - expect truthy value
    ok 1 - close callback # time=90.151ms
    
    # Subtest: inside register
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - expect truthy value
    ok 2 - inside register # time=18.947ms
    
    # Subtest: close order
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - close order # time=16.669ms
    
    # Subtest: should not throw an error if the server is not listening
        1..2
        ok 1 - type is [object Object]
        ok 2 - should not error
    ok 4 - should not throw an error if the server is not listening # time=7.151ms
    
    # Subtest: onClose should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 5 - onClose should keep the context # time=8.138ms
    
    # Subtest: Should return 503 while closing - injection
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 6 - Should return 503 while closing - injection # time=146.856ms
    
    1..6
    # time=467.517ms
}

ok 9 - test/content-length.test.js # time=5582.901ms {
    # Subtest: default 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 413 with bodyLimit option # time=76.737ms
    
    # Subtest: default 413 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - default 413 with wrong content-length # time=36.684ms
    
    # Subtest: custom 413 with bodyLimit option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - custom 413 with bodyLimit option # time=13.29ms
    
    # Subtest: custom 413 with wrong content-length
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - custom 413 with wrong content-length # time=10.196ms
    
    1..4
    # time=267.454ms
}

ok 10 - test/context-config.test.js # time=5205.712ms {
    # Subtest: config
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 1 - config # time=60.233ms
    
    1..1
    # time=138.596ms
}

ok 11 - test/custom-http-server.test.js # time=5245.109ms {
    # Subtest: Should support a custom http server
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 1 - Should support a custom http server # time=72.602ms
    
    1..1
    # time=172.665ms
}

ok 12 - test/custom-parser.test.js # time=6242.892ms {
    # Subtest: contentTypeParser should add a custom async parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=57.181ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=17.631ms
        
    ok 1 - contentTypeParser should add a custom async parser # time=407.029ms
    
    # Subtest: contentTypeParser method should exist
        1..1
        ok 1 - expect truthy value
    ok 2 - contentTypeParser method should exist # time=2.196ms
    
    # Subtest: contentTypeParser should add a custom parser
        1..3
        ok 1 - should not error
        # Subtest: in POST
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - in POST # time=8.633ms
        
        # Subtest: in OPTIONS
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 3 - in OPTIONS # time=8.197ms
        
    ok 3 - contentTypeParser should add a custom parser # time=32.292ms
    
    # Subtest: contentTypeParser should handle multiple custom parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 4 - contentTypeParser should handle multiple custom parsers # time=17.27ms
    
    # Subtest: contentTypeParser should handle an array of custom contentTypes
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 5 - contentTypeParser should handle an array of custom contentTypes # time=15.123ms
    
    # Subtest: contentTypeParser should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 6 - contentTypeParser should handle errors # time=14.688ms
    
    # Subtest: contentTypeParser should support encapsulation
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - expect falsey value
        ok 6 - expect falsey value
    ok 7 - contentTypeParser should support encapsulation # time=14.189ms
    
    # Subtest: contentTypeParser should support encapsulation, second try
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - contentTypeParser should support encapsulation, second try # time=21.547ms
    
    # Subtest: contentTypeParser shouldn't support request with undefined "Content-Type"
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 9 - contentTypeParser shouldn't support request with undefined "Content-Type" # time=14.504ms
    
    # Subtest: the content type should be a string
        1..1
        ok 1 - should be equal
    ok 10 - the content type should be a string # time=1.728ms
    
    # Subtest: the content type cannot be an empty string
        1..1
        ok 1 - should be equal
    ok 11 - the content type cannot be an empty string # time=1.549ms
    
    # Subtest: the content type handler should be a function
        1..1
        ok 1 - should be equal
    ok 12 - the content type handler should be a function # time=3.231ms
    
    # Subtest: catch all content type parser
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 13 - catch all content type parser # time=21.078ms
    
    # Subtest: catch all content type parser should not interfere with other conte type parsers
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 14 - catch all content type parser should not interfere with other conte type parsers # time=22.498ms
    
    # Subtest: '*' catch undefined Content-Type requests
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 15 - '*' catch undefined Content-Type requests # time=23.442ms
    
    # Subtest: cannot add custom parser after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 16 - cannot add custom parser after binding # time=7.875ms
    
    # Subtest: Can override the default json parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 17 - Can override the default json parser # time=15.088ms
    
    # Subtest: Can override the default plain text parser
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 18 - Can override the default plain text parser # time=16.163ms
    
    # Subtest: Can override the default json parser in a plugin
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 19 - Can override the default json parser in a plugin # time=13.001ms
    
    # Subtest: Can't override the json parser multiple times
        1..1
        ok 1 - should be equal
    ok 20 - Can't override the json parser multiple times # time=1.868ms
    
    # Subtest: Can't override the plain text parser multiple times
        1..1
        ok 1 - should be equal
    ok 21 - Can't override the plain text parser multiple times # time=1.547ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 22 - Should get the body as string # time=15.594ms
    
    # Subtest: Should return defined body with no custom parser defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 23 - Should return defined body with no custom parser defined and content type = 'text/plain' # time=13.184ms
    
    # Subtest: Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 24 - Should have typeof body object with no custom parser defined, no body defined and content type = 'text/plain' # time=9.869ms
    
    # Subtest: Should have typeof body object with no custom parser defined, null body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 25 - Should have typeof body object with no custom parser defined, null body and content type = 'text/plain' # time=11.863ms
    
    # Subtest: Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain'
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 26 - Should have typeof body object with no custom parser defined, undefined body and content type = 'text/plain' # time=14.445ms
    
    # Subtest: Should get the body as string
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 27 - Should get the body as string # time=14.3ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 28 - Should get the body as buffer # time=15.049ms
    
    # Subtest: Should get the body as buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 29 - Should get the body as buffer # time=12.502ms
    
    # Subtest: Should parse empty bodies as a string
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 30 - Should parse empty bodies as a string # time=20.359ms
    
    # Subtest: Should parse empty bodies as a buffer
        1..6
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 31 - Should parse empty bodies as a buffer # time=15.175ms
    
    # Subtest: The charset should not interfere with the content type handling
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 32 - The charset should not interfere with the content type handling # time=12.13ms
    
    # Subtest: Wrong parseAs parameter
        1..1
        ok 1 - should be equal
    ok 33 - Wrong parseAs parameter # time=2.731ms
    
    # Subtest: Should allow defining the bodyLimit per parser
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 34 - Should allow defining the bodyLimit per parser # time=14.162ms
    
    # Subtest: route bodyLimit should take precedence over a custom parser bodyLimit
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent strictly
    ok 35 - route bodyLimit should take precedence over a custom parser bodyLimit # time=8.137ms
    
    1..35
    # time=938.469ms
}

ok 13 - test/custom-querystring-parser.test.js # time=5775.683ms {
    # Subtest: Custom querystring parser
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 1 - Custom querystring parser # time=121.098ms
    
    # Subtest: Custom querystring parser should be called also if there is nothing to parse
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 2 - Custom querystring parser should be called also if there is nothing to parse # time=20.857ms
    
    # Subtest: Querystring without value
        1..9
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
    ok 3 - Querystring without value # time=18.15ms
    
    # Subtest: Custom querystring parser should be a function
        1..1
        ok 1 - should be equal
    ok 4 - Custom querystring parser should be a function # time=1.212ms
    
    1..4
    # time=288.102ms
}

ok 14 - test/decorator.test.js # time=6033.991ms {
    # Subtest: server methods should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect truthy value
    ok 1 - server methods should exist # time=13.016ms
    
    # Subtest: server methods should be incapsulated via .register
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 2 - server methods should be incapsulated via .register # time=172.302ms
    
    # Subtest: hasServerMethod should check if the given method already exist
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 3 - hasServerMethod should check if the given method already exist # time=7.428ms
    
    # Subtest: decorate should throw if a declared dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - (unnamed test)
    ok 4 - decorate should throw if a declared dependency is not present # time=4.355ms
    
    # Subtest: should pass error for missing request decorator
        1..2
        ok 1 - type is Error
        ok 2 - should match pattern provided
    ok 5 - should pass error for missing request decorator # time=11.87ms
    
    # Subtest: decorateReply inside register
        1..12
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - test exists
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 6 - decorateReply inside register # time=81.739ms
    
    # Subtest: decorateReply as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 7 - decorateReply as plugin (inside .after) # time=24.855ms
    
    # Subtest: decorateReply as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 8 - decorateReply as plugin (outside .after) # time=25.366ms
    
    # Subtest: decorateRequest inside register
        1..12
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - test exists
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 9 - decorateRequest inside register # time=34.681ms
    
    # Subtest: decorateRequest as plugin (inside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 10 - decorateRequest as plugin (inside .after) # time=27.417ms
    
    # Subtest: decorateRequest as plugin (outside .after)
        1..11
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
    ok 11 - decorateRequest as plugin (outside .after) # time=30.132ms
    
    # Subtest: decorators should be instance separated
        1..1
        ok 1 - (unnamed test)
    ok 12 - decorators should be instance separated # time=3.18ms
    
    # Subtest: hasRequestDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=3.824ms
        
        # Subtest: should check if the given request decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given request decoration already exist # time=2.652ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 3 - should be plugin encapsulable # time=11.146ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 4 - should be inherited # time=4.084ms
        
        1..4
    ok 13 - hasRequestDecorator # time=40.135ms
    
    # Subtest: hasReplyDecorator
        # Subtest: is a function
            1..1
            ok 1 - expect truthy value
        ok 1 - is a function # time=7.754ms
        
        # Subtest: should check if the given reply decoration already exist
            1..2
            ok 1 - expect falsey value
            ok 2 - expect truthy value
        ok 2 - should check if the given reply decoration already exist # time=3.912ms
        
        # Subtest: should be plugin encapsulable
            1..4
            ok 1 - expect falsey value
            ok 2 - expect falsey value
            ok 3 - expect truthy value
            ok 4 - expect falsey value
        ok 3 - should be plugin encapsulable # time=17.946ms
        
        # Subtest: should be inherited
            1..2
            ok 1 - expect truthy value
            ok 2 - expect truthy value
        ok 4 - should be inherited # time=11.522ms
        
        1..4
    ok 14 - hasReplyDecorator # time=62.177ms
    
    # Subtest: should register properties via getter/setter objects
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect falsey value
    ok 15 - should register properties via getter/setter objects # time=4.896ms
    
    # Subtest: decorateRequest should work with getter/setter
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 16 - decorateRequest should work with getter/setter # time=22.989ms
    
    # Subtest: decorateReply should work with getter/setter
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - (unnamed test)
    ok 17 - decorateReply should work with getter/setter # time=16.15ms
    
    # Subtest: should register empty values
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 18 - should register empty values # time=2.838ms
    
    # Subtest: nested plugins can override things
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 19 - nested plugins can override things # time=5.859ms
    
    # Subtest: a decorator should addSchema to all the encapsulated tree
        1..1
        ok 1 - should not error
    ok 20 - a decorator should addSchema to all the encapsulated tree # time=7.406ms
    
    1..20
    # time=696.491ms
}

ok 15 - test/delete.test.js # time=5643.879ms {
    # Subtest: shorthand - delete
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - delete # time=10.177ms
    
    # Subtest: shorthand - delete params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - delete params # time=1.518ms
    
    # Subtest: shorthand - delete, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - delete, querystring schema # time=2.033ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, headers schema # time=1.14ms
    
    # Subtest: missing schema - delete
        1..1
        ok 1 - (unnamed test)
    ok 5 - missing schema - delete # time=1.942ms
    
    # Subtest: body - delete
        1..1
        ok 1 - (unnamed test)
    ok 6 - body - delete # time=1.26ms
    
    # Subtest: shorthand - delete with application/json Content-Type header and without body
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - delete with application/json Content-Type header and without body # time=54.725ms
    
    ok 8 - should not error
    # Subtest: shorthand - request delete
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - request delete # time=66.42ms
    
    # Subtest: shorthand - request delete params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - shorthand - request delete params schema # time=9.75ms
    
    # Subtest: shorthand - request delete params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - shorthand - request delete params schema error # time=9.097ms
    
    # Subtest: shorthand - request delete headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 12 - shorthand - request delete headers schema # time=6.24ms
    
    # Subtest: shorthand - request delete headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request delete headers schema error # time=7.504ms
    
    # Subtest: shorthand - request delete querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - shorthand - request delete querystring schema # time=4.357ms
    
    # Subtest: shorthand - request delete querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request delete querystring schema error # time=7.567ms
    
    # Subtest: shorthand - request delete missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request delete missing schema # time=4.906ms
    
    # Subtest: shorthand - delete with body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - delete with body # time=10.561ms
    
    1..17
    # time=369.016ms
}

ok 16 - test/emit-warning.test.js # time=5820.816ms {
    # Subtest: should emit warning using genReqId prop in logger options
        1..1
        ok 1 - should be equal
    ok 1 - should emit warning using genReqId prop in logger options # time=45.009ms
    
    # Subtest: should emit warning if basePath prop is used
        1..1
        ok 1 - should be equal
    ok 2 - should emit warning if basePath prop is used # time=9.697ms
    
    # Subtest: should emit warning if preHandler is used
        1..1
        ok 1 - should be equal
    ok 3 - should emit warning if preHandler is used # time=14.892ms
    
    1..3
    # time=191.58ms
}

ok 17 - test/error-in-post.test.js # time=5715.562ms {
    ok 1 - should be equal
    1..1
    # time=104.439ms
}

ok 18 - test/fastify-instance.test.js # time=5762.652ms {
    # Subtest: root fastify instance is an object
        1..1
        ok 1 - type is object
    ok 1 - root fastify instance is an object # time=17.014ms
    
    1..1
    # time=121.913ms
}

ok 19 - test/fluent-schema.test.js # time=6222.738ms {
    # Subtest: fluent-schema generate a valid JSON Schema in "$ref-way"
        1..1
        ok 1 - should not error
    ok 1 - fluent-schema generate a valid JSON Schema in "$ref-way" # time=112.655ms
    
    # Subtest: fluent-schema generate a valid JSON Schema in "replace-way"
        1..1
        ok 1 - should not error
    ok 2 - fluent-schema generate a valid JSON Schema in "replace-way" # time=38.079ms
    
    # Subtest: fluent-schema mix-up of "$ref-way" and "replace-way"
        1..1
        ok 1 - should not error
    ok 3 - fluent-schema mix-up of "$ref-way" and "replace-way" # time=42.071ms
    
    1..3
    # time=302.956ms
}

ok 20 - test/genReqId.test.js # time=6082.134ms {
    # Subtest: Should accept a custom genReqId function
        1..4
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 1 - Should accept a custom genReqId function # time=92.514ms
    
    1..1
    # time=190.18ms
}

ok 21 - test/get.test.js # time=6283.695ms {
    # Subtest: shorthand - get
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - get # time=6.056ms
    
    # Subtest: shorthand - get (return null)
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - get (return null) # time=1.688ms
    
    # Subtest: shorthand - get params
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - get params # time=1.888ms
    
    # Subtest: shorthand - get, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 4 - shorthand - get, querystring schema # time=2.314ms
    
    # Subtest: shorthand - get, headers schema
        1..1
        ok 1 - (unnamed test)
    ok 5 - shorthand - get, headers schema # time=1.234ms
    
    # Subtest: missing schema - get
        1..1
        ok 1 - (unnamed test)
    ok 6 - missing schema - get # time=3.774ms
    
    # Subtest: custom serializer - get
        1..1
        ok 1 - (unnamed test)
    ok 7 - custom serializer - get # time=2.041ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 8 - empty response # time=1.231ms
    
    # Subtest: send a falsy boolean
        1..1
        ok 1 - (unnamed test)
    ok 9 - send a falsy boolean # time=1.023ms
    
    ok 10 - should not error
    # Subtest: shorthand - request get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - request get # time=80.307ms
    
    # Subtest: shorthand - request get params schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - shorthand - request get params schema # time=14.526ms
    
    # Subtest: shorthand - request get params schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - shorthand - request get params schema error # time=6.405ms
    
    # Subtest: shorthand - request get headers schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 14 - shorthand - request get headers schema # time=12.45ms
    
    # Subtest: shorthand - request get headers schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - shorthand - request get headers schema error # time=5.536ms
    
    # Subtest: shorthand - request get querystring schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - shorthand - request get querystring schema # time=9.413ms
    
    # Subtest: shorthand - request get querystring schema error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - shorthand - request get querystring schema error # time=4.275ms
    
    # Subtest: shorthand - request get missing schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - shorthand - request get missing schema # time=6.497ms
    
    # Subtest: shorthand - custom serializer
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - shorthand - custom serializer # time=7.473ms
    
    # Subtest: shorthand - empty response
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - shorthand - empty response # time=4.027ms
    
    # Subtest: shorthand - send a falsy boolean
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - shorthand - send a falsy boolean # time=7.656ms
    
    # Subtest: shorthand - send null value
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - shorthand - send null value # time=4.08ms
    
    1..22
    # time=455.435ms
}

ok 22 - test/handler-context.test.js # time=6006.881ms {
    # Subtest: handlers receive correct `this` context
        1..4
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 1 - handlers receive correct `this` context # time=113.418ms
    
    # Subtest: handlers have access to the internal context
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - type is Object
        ok 4 - expect truthy value
        ok 5 - should be equal
    ok 2 - handlers have access to the internal context # time=25.34ms
    
    1..2
    # time=230.515ms
}

ok 23 - test/head.test.js # time=6906.576ms {
    # Subtest: shorthand - head
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - head # time=15.183ms
    
    # Subtest: shorthand - head params
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - head params # time=1.571ms
    
    # Subtest: shorthand - head, querystring schema
        1..1
        ok 1 - (unnamed test)
    ok 3 - shorthand - head, querystring schema # time=4.721ms
    
    # Subtest: missing schema - head
        1..1
        ok 1 - (unnamed test)
    ok 4 - missing schema - head # time=1.872ms
    
    ok 5 - should not error
    # Subtest: shorthand - request head
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - shorthand - request head # time=47.844ms
    
    # Subtest: shorthand - request head params schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - shorthand - request head params schema # time=7.077ms
    
    # Subtest: shorthand - request head params schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - shorthand - request head params schema error # time=6.743ms
    
    # Subtest: shorthand - request head querystring schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - shorthand - request head querystring schema # time=5.407ms
    
    # Subtest: shorthand - request head querystring schema error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - request head querystring schema error # time=3.81ms
    
    # Subtest: shorthand - request head missing schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - shorthand - request head missing schema # time=4.434ms
    
    1..11
    # time=342.707ms
}

ok 24 - test/hooks.test.js # time=8472.724ms {
    # Subtest: hooks
        1..37
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - expect truthy value
        ok 15 - expect truthy value
        ok 16 - should be equal
        ok 17 - should be equal
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
        ok 21 - should be equal
        ok 22 - should be equal
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - expect truthy value
        ok 26 - expect truthy value
        ok 27 - expect truthy value
        ok 28 - expect truthy value
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - should be equal
        ok 32 - should not error
        ok 33 - should be equal
        ok 34 - should be equal
        ok 35 - should be equivalent
        ok 36 - should not error
        ok 37 - should be equal
    ok 1 - hooks # time=706.56ms
    
    # Subtest: onRequest hook should support encapsulation / 1
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 2 - onRequest hook should support encapsulation / 1 # time=29.07ms
    
    # Subtest: onRequest hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 3 - onRequest hook should support encapsulation / 2 # time=10.212ms
    
    # Subtest: onRequest hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 4 - onRequest hook should support encapsulation / 3 # time=32.489ms
    
    # Subtest: preHandler hook should support encapsulation / 5
        1..17
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 5 - preHandler hook should support encapsulation / 5 # time=26.136ms
    
    # Subtest: onRoute hook should be called / 1
        1..2
        ok 1 - (unnamed test)
        ok 2 - should not error
    ok 6 - onRoute hook should be called / 1 # time=9.145ms
    
    # Subtest: onRoute hook should be called / 2
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 7 - onRoute hook should be called / 2 # time=6.461ms
    
    # Subtest: onRoute hook should be called / 3
        1..6
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
        ok 6 - should not error
    ok 8 - onRoute hook should be called / 3 # time=24.282ms
    
    # Subtest: onRoute should keep the context
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
    ok 9 - onRoute should keep the context # time=5.79ms
    
    # Subtest: onRoute hook should pass correct route
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
    ok 10 - onRoute hook should pass correct route # time=9.533ms
    
    # Subtest: onRoute hook should pass correct route with custom prefix
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
    ok 11 - onRoute hook should pass correct route with custom prefix # time=8.559ms
    
    # Subtest: onRoute hook should pass correct route with custom options
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
    ok 12 - onRoute hook should pass correct route with custom options # time=13.154ms
    
    # Subtest: onRoute hook should receive any route option
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
    ok 13 - onRoute hook should receive any route option # time=11.059ms
    
    # Subtest: onRoute hook should preserve system route configuration
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
    ok 14 - onRoute hook should preserve system route configuration # time=8.381ms
    
    # Subtest: onRoute hook should preserve handler function in options of shorthand route system configuration
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 15 - onRoute hook should preserve handler function in options of shorthand route system configuration # time=13.613ms
    
    # Subtest: onResponse hook should log request error
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 16 - onResponse hook should log request error # time=18.803ms
    
    # Subtest: onResponse hook should support encapsulation / 1
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 17 - onResponse hook should support encapsulation / 1 # time=12.633ms
    
    # Subtest: onResponse hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 18 - onResponse hook should support encapsulation / 2 # time=11.87ms
    
    # Subtest: onResponse hook should support encapsulation / 3
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 19 - onResponse hook should support encapsulation / 3 # time=37.146ms
    
    # Subtest: onSend hook should support encapsulation / 1
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - onSend hook should support encapsulation / 1 # time=10.34ms
    
    # Subtest: onSend hook should support encapsulation / 2
        1..16
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
    ok 21 - onSend hook should support encapsulation / 2 # time=35.2ms
    
    # Subtest: onSend hook is called after payload is serialized and headers are set
        1..30
        ok 1 - should be equivalent
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equal
        ok 21 - should be equal
        ok 22 - should be equal
        ok 23 - should not error
        ok 24 - should be equal
        ok 25 - should be equivalent
        ok 26 - should be equal
        ok 27 - should not error
        ok 28 - should be equal
        ok 29 - should be equivalent
        ok 30 - should be equal
    ok 22 - onSend hook is called after payload is serialized and headers are set # time=52.811ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 23 - modify payload # time=12.343ms
    
    # Subtest: clear payload
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 24 - clear payload # time=14.358ms
    
    # Subtest: onSend hook throws
        1..7
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
    ok 25 - onSend hook throws # time=21.516ms
    
    # Subtest: onSend hook should receive valid request and reply objects if onRequest hook fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 26 - onSend hook should receive valid request and reply objects if onRequest hook fails # time=11.577ms
    
    # Subtest: onSend hook should receive valid request and reply objects if middleware fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 27 - onSend hook should receive valid request and reply objects if middleware fails # time=16.787ms
    
    # Subtest: onSend hook should receive valid request and reply objects if a custom content type parser fails
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 28 - onSend hook should receive valid request and reply objects if a custom content type parser fails # time=8.412ms
    
    # Subtest: cannot add hook after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 29 - cannot add hook after binding # time=10.658ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 30 - onRequest hooks should be able to block a request # time=12.261ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 31 - preValidation hooks should be able to block a request # time=5.686ms
    
    # Subtest: preParsing hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 32 - preParsing hooks should be able to block a request # time=10.52ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 33 - preHandler hooks should be able to block a request # time=5.943ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 34 - onRequest hooks should be able to block a request (last hook) # time=11.579ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 35 - preHandler hooks should be able to block a request (last hook) # time=11.707ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 36 - onRequest respond with a stream # time=16.294ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 37 - preHandler respond with a stream # time=10.304ms
    
    # Subtest: Register an hook after a plugin inside a plugin
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 38 - Register an hook after a plugin inside a plugin # time=19.644ms
    
    # Subtest: Register an hook after a plugin inside a plugin (with preHandler option)
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 39 - Register an hook after a plugin inside a plugin (with preHandler option) # time=9.43ms
    
    # Subtest: Register hooks inside a plugin after an encapsulated plugin
        1..7
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 40 - Register hooks inside a plugin after an encapsulated plugin # time=18.995ms
    
    # Subtest: onRequest hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 41 - onRequest hooks should run in the order in which they are defined # time=15.345ms
    
    # Subtest: preHandler hooks should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 42 - preHandler hooks should run in the order in which they are defined # time=12.184ms
    
    # Subtest: onSend hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 43 - onSend hooks should run in the order in which they are defined # time=14.349ms
    
    # Subtest: onResponse hooks should run in the order in which they are defined
        1..8
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 44 - onResponse hooks should run in the order in which they are defined # time=18.842ms
    
    # Subtest: onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 45 - onRequest, preHandler, and onResponse hooks that resolve to a value do not cause an error # time=17.792ms
    
    # Subtest: If a response header has been set inside an hook it shoulod not be overwritten by the final response handler
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 46 - If a response header has been set inside an hook it shoulod not be overwritten by the final response handler # time=8.21ms
    
    # Subtest: If the content type has been set inside an hook it should not be changed
        1..5
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 47 - If the content type has been set inside an hook it should not be changed # time=6.048ms
    
    # Subtest: request in onRequest, preParsing, preValidation and onResponse
        1..18
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equivalent
        ok 10 - should be equivalent
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equivalent
        ok 14 - should be equivalent
        ok 15 - should be equivalent
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
    ok 48 - request in onRequest, preParsing, preValidation and onResponse # time=30.623ms
    
    # Subtest: preValidation hook should support encapsulation / 1
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 49 - preValidation hook should support encapsulation / 1 # time=10.726ms
    
    # Subtest: preValidation hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 50 - preValidation hook should support encapsulation / 2 # time=4.099ms
    
    # Subtest: preValidation hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 51 - preValidation hook should support encapsulation / 3 # time=20.393ms
    
    # Subtest: onError hook
        1..3
        ok 1 - should match pattern provided
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 52 - onError hook # time=10.942ms
    
    # Subtest: reply.send should throw if called inside the onError hook
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 53 - reply.send should throw if called inside the onError hook # time=6.291ms
    
    # Subtest: onError hook with setErrorHandler
        # Subtest: Send error
            1..3
            ok 1 - should match pattern provided
            ok 2 - should not error
            ok 3 - should be equivalent
        ok 1 - Send error # time=12.573ms
        
        # Subtest: Hide error
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 2 - Hide error # time=4.7ms
        
        1..2
    ok 54 - onError hook with setErrorHandler # time=26.465ms
    
    # Subtest: preParsing hook should support encapsulation / 1
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 55 - preParsing hook should support encapsulation / 1 # time=10.418ms
    
    # Subtest: preParsing hook should support encapsulation / 2
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 56 - preParsing hook should support encapsulation / 2 # time=3.299ms
    
    # Subtest: preParsing hook should support encapsulation / 3
        1..20
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect falsey value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equivalent
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - should be equal
        ok 20 - should be equivalent
    ok 57 - preParsing hook should support encapsulation / 3 # time=25.403ms
    
    # Subtest: preSerialization hook should run before serialization and be able to modify the payload
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 58 - preSerialization hook should run before serialization and be able to modify the payload # time=35.852ms
    
    # Subtest: preSerialization hook should be able to throw errors which are not validated against schema response
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        1..5
    ok 59 - preSerialization hook should be able to throw errors which are not validated against schema response # time=8.882ms
    
    # Subtest: preSerialization hook which returned error should still run onError hooks
        1..4
        ok 1 - should not error
        ok 2 - (unnamed test)
        ok 3 - should not error
        ok 4 - should be equal
    ok 60 - preSerialization hook which returned error should still run onError hooks # time=13.065ms
    
    # Subtest: preSerialization hooks should run in the order in which they are defined
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 61 - preSerialization hooks should run in the order in which they are defined # time=11.058ms
    
    # Subtest: preSerialization hooks should support encapsulation
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 62 - preSerialization hooks should support encapsulation # time=13.442ms
    
    # Subtest: async hooks
        1..21
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - expect truthy value
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equivalent
        ok 15 - expect truthy value
        ok 16 - expect truthy value
        ok 17 - should not error
        ok 18 - should be equal
        ok 19 - expect truthy value
        ok 20 - should not error
        ok 21 - should be equal
    ok 63 - async hooks # time=26.527ms
    
    # Subtest: modify payload
        1..10
        ok 1 - expect truthy value
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - should be equivalent
        ok 5 - expect truthy value
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
    ok 64 - modify payload # time=8.938ms
    
    # Subtest: onRequest hooks should be able to block a request
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 65 - onRequest hooks should be able to block a request # time=5.697ms
    
    # Subtest: preHandler hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 66 - preHandler hooks should be able to block a request # time=10.053ms
    
    # Subtest: preValidation hooks should be able to block a request
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 67 - preValidation hooks should be able to block a request # time=5.452ms
    
    # Subtest: preSerialization hooks should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 68 - preSerialization hooks should be able to modify the payload # time=5.187ms
    
    # Subtest: preSerialization hooks should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 69 - preSerialization hooks should handle errors # time=24.671ms
    
    # Subtest: onRequest hooks should be able to block a request (last hook)
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 70 - onRequest hooks should be able to block a request (last hook) # time=10.049ms
    
    # Subtest: preHandler hooks should be able to block a request (last hook)
        1..5
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 71 - preHandler hooks should be able to block a request (last hook) # time=8.939ms
    
    # Subtest: onRequest respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 72 - onRequest respond with a stream # time=13.637ms
    
    # Subtest: preHandler respond with a stream
        1..7
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - expect truthy value
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equal
    ok 73 - preHandler respond with a stream # time=12.932ms
    
    1..73
    # time=1919.999ms
}

ok 25 - test/inject.test.js # time=7641.104ms {
    # Subtest: inject should exist
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 1 - inject should exist # time=15.22ms
    
    # Subtest: should wait for the ready event
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should wait for the ready event # time=689.893ms
    
    # Subtest: inject get request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 3 - inject get request # time=7.008ms
    
    # Subtest: inject get request - code check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - inject get request - code check # time=21.523ms
    
    # Subtest: inject get request - headers check
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - inject get request - headers check # time=9.644ms
    
    # Subtest: inject get request - querystring
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 6 - inject get request - querystring # time=16.204ms
    
    # Subtest: inject get request - params
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 7 - inject get request - params # time=12.308ms
    
    # Subtest: inject get request - wildcard
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 8 - inject get request - wildcard # time=20.048ms
    
    # Subtest: inject get request - headers
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 9 - inject get request - headers # time=11.348ms
    
    # Subtest: inject post request
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 10 - inject post request # time=46.823ms
    
    # Subtest: inject post request - send stream
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
    ok 11 - inject post request - send stream # time=9.707ms
    
    # Subtest: inject get request - reply stream
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 12 - inject get request - reply stream # time=19.969ms
    
    # Subtest: inject promisify - waiting for ready event
        1..1
        ok 1 - should be equal
    ok 13 - inject promisify - waiting for ready event # time=14.637ms
    
    # Subtest: inject promisify - after the ready event
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 14 - inject promisify - after the ready event # time=8.172ms
    
    # Subtest: inject promisify - when the server is up
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - inject promisify - when the server is up # time=23.741ms
    
    # Subtest: should reject in error case
        1..1
        ok 1 - should be equal
    ok 16 - should reject in error case # time=518.34ms
    
    # Subtest: inject a multipart request using form-body
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 17 - inject a multipart request using form-body # time=20.722ms
    
    # Subtest: should error the promise if ready errors
        1..3
        ok 1 - after is called
        ok 2 - expect truthy value
        ok 3 - should be equal
    ok 18 - should error the promise if ready errors # time=9.563ms
    
    # Subtest: should throw error if callback specified and if ready errors
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 19 - should throw error if callback specified and if ready errors # time=4.266ms
    
    1..19
    # time=1671.012ms
}

ok 26 - test/input-validation.test.js # time=6310.039ms {
    # Subtest: case insensitive header validation
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 1 - case insensitive header validation # time=126.589ms
    
    # Subtest: not evaluate json-schema $schema keyword
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 2 - not evaluate json-schema $schema keyword # time=62.634ms
    
    1..2
    # time=320.428ms
}

ok 27 - test/listen.test.js # time=6899.706ms {
    # Subtest: listen accepts a callback
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 1 - listen accepts a callback # time=200.176ms
    
    # Subtest: listen accepts a port and a callback
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 2 - listen accepts a port and a callback # time=10.25ms
    
    # Subtest: listen accepts a port and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 3 - listen accepts a port and a callback with (err, address) # time=5.041ms
    
    # Subtest: listen accepts a port, address, and callback
        1..1
        ok 1 - should not error
    ok 4 - listen accepts a port, address, and callback # time=17.302ms
    
    # Subtest: listen accepts a port, address and a callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 5 - listen accepts a port, address and a callback with (err, address) # time=13.412ms
    
    # Subtest: listen accepts a port, address, backlog and callback
        1..1
        ok 1 - should not error
    ok 6 - listen accepts a port, address, backlog and callback # time=20.194ms
    
    # Subtest: listen accepts a port, address, backlog and callback with (err, address)
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 7 - listen accepts a port, address, backlog and callback with (err, address) # time=3.65ms
    
    # Subtest: listen after Promise.resolve()
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 8 - listen after Promise.resolve() # time=5.538ms
    
    # Subtest: register after listen using Promise.resolve()
        1..1
        ok 1 - resolved
    ok 9 - register after listen using Promise.resolve() # time=9.685ms
    
    # Subtest: double listen errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - expect truthy value
    ok 10 - double listen errors # time=9.587ms
    
    # Subtest: double listen errors callback with (err, address)
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 11 - double listen errors callback with (err, address) # time=6.554ms
    
    # Subtest: listen twice on the same port
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 12 - listen twice on the same port # time=17.235ms
    
    # Subtest: listen twice on the same port callback with (err, address)
        1..4
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - expect truthy value
    ok 13 - listen twice on the same port callback with (err, address) # time=19.534ms
    
    # Subtest: listen without callback (port zero)
        1..1
        ok 1 - should be equal
    ok 14 - listen without callback (port zero) # time=9.021ms
    
    # Subtest: listen without callback (port not given)
        1..1
        ok 1 - should be equal
    ok 15 - listen without callback (port not given) # time=4.199ms
    
    # Subtest: listen null without callback with (address)
        1..1
        ok 1 - should be equal
    ok 16 - listen null without callback with (address) # time=6.716ms
    
    # Subtest: listen without port without callback with (address)
        1..1
        ok 1 - should be equal
    ok 17 - listen without port without callback with (address) # time=4.007ms
    
    # Subtest: listen with undefined without callback with (address)
        1..1
        ok 1 - should be equal
    ok 18 - listen with undefined without callback with (address) # time=3.926ms
    
    # Subtest: listen without callback with (address)
        1..1
        ok 1 - should be equal
    ok 19 - listen without callback with (address) # time=10.086ms
    
    # Subtest: double listen without callback rejects
        1..1
        ok 1 - expect truthy value
    ok 20 - double listen without callback rejects # time=5.286ms
    
    # Subtest: double listen without callback with (address)
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 21 - double listen without callback with (address) # time=6.988ms
    
    # Subtest: listen twice on the same port without callback rejects
        1..1
        ok 1 - expect truthy value
    ok 22 - listen twice on the same port without callback rejects # time=16.366ms
    
    # Subtest: listen twice on the same port without callback rejects with (address)
        1..2
        ok 1 - should be equal
        ok 2 - expect truthy value
    ok 23 - listen twice on the same port without callback rejects with (address) # time=8.247ms
    
    # Subtest: listen on invalid port without callback rejects
        ok 1 - expect truthy value
        1..1
    ok 24 - listen on invalid port without callback rejects # time=4.045ms
    
    # Subtest: listen logs the port as info
        1..1
        ok 1 - expect truthy value
    ok 25 - listen logs the port as info # time=6.594ms
    
    1..25
    # time=545.825ms
}

ok 28 - test/logger.test.js # time=7988.956ms {
    # Subtest: defaults to info level
        1..13
        ok 1 - listen at log message is ok
        ok 2 - should not error
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
        ok 13 - responseTime is defined
    ok 1 - defaults to info level # time=374.73ms
    
    # Subtest: test log stream
        1..12
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
    ok 2 - test log stream # time=32.361ms
    
    # Subtest: test error log stream
        1..11
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - reqId is defined
        ok 4 - req is defined
        ok 5 - message is set
        ok 6 - method is get
        ok 7 - expect truthy value
        ok 8 - reqId is defined
        ok 9 - res is defined
        ok 10 - message is set
        ok 11 - statusCode is 500
    ok 3 - test error log stream # time=22.592ms
    
    # Subtest: can use external logger instance
        1..6
        ok 1 - "Server listening at http://127.0.0.1:64665" dont match "/^Server listening at /"
        ok 2 - should not error
        ok 3 - "incoming request" dont match "/^incoming request$/"
        ok 4 - expect truthy value
        ok 5 - "log success" dont match "/^log success$/"
        ok 6 - "request completed" dont match "/^request completed$/"
    ok 4 - can use external logger instance # time=20.539ms
    
    # Subtest: can use external logger instance with custom serializer
        1..6
        ok 1 - should be equivalent
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - expect truthy value
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 5 - can use external logger instance with custom serializer # time=17.168ms
    
    # Subtest: expose the logger
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 6 - expose the logger # time=2.156ms
    
    # Subtest: The request id header key can be customized
        1..9
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - message is set
        ok 6 - should be equal
        ok 7 - message is set
        ok 8 - should be equal
        ok 9 - message is set
    ok 7 - The request id header key can be customized # time=15.522ms
    
    # Subtest: The logger should accept custom serializer
        1..9
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - req is defined
        ok 4 - message is set
        ok 5 - custom req serialiser is use
        ok 6 - expect truthy value
        ok 7 - res is defined
        ok 8 - message is set
        ok 9 - default res serialiser is use
    ok 8 - The logger should accept custom serializer # time=15.685ms
    
    # Subtest: reply.send logs an error if called twice in a row
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 9 - reply.send logs an error if called twice in a row # time=12.222ms
    
    # Subtest: logger can be silented
        1..17
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equal
    ok 10 - logger can be silented # time=6.445ms
    
    # Subtest: Should set a custom logLevel for a plugin
        1..7
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should not error
        ok 7 - should be equivalent
    ok 11 - Should set a custom logLevel for a plugin # time=11.377ms
    
    # Subtest: Should set a custom logLevel for every plugin
        1..18
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - expect truthy value
        ok 12 - expect truthy value
        ok 13 - expect truthy value
        ok 14 - expect truthy value
        ok 15 - expect truthy value
        ok 16 - expect truthy value
        ok 17 - should not error
        ok 18 - should be equivalent
    ok 12 - Should set a custom logLevel for every plugin # time=18.683ms
    
    # Subtest: Should increase the log level for a specific plugin
        1..4
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 13 - Should increase the log level for a specific plugin # time=13.044ms
    
    # Subtest: Should set the log level for the customized 404 handler
        1..4
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 14 - Should set the log level for the customized 404 handler # time=7.812ms
    
    # Subtest: Should set the log level for the customized 500 handler
        1..4
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - Should set the log level for the customized 500 handler # time=24.177ms
    
    # Subtest: Should set a custom log level for a specific route
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equivalent
    ok 16 - Should set a custom log level for a specific route # time=10.811ms
    
    # Subtest: The default 404 handler logs the incoming request
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 17 - The default 404 handler logs the incoming request # time=9.423ms
    
    # Subtest: should serialize request and response
        1..3
        ok 1 - expect truthy value
        ok 2 - should be equal
        ok 3 - should be equal
    ok 18 - should serialize request and response # time=12.346ms
    
    # Subtest: Do not wrap IPv4 address
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 19 - Do not wrap IPv4 address # time=5.579ms
    
    # Subtest: file option
        1..13
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - listen at log message is ok
        ok 4 - reqId is defined
        ok 5 - req is defined
        ok 6 - message is set
        ok 7 - method is get
        ok 8 - should be equal
        ok 9 - reqId is defined
        ok 10 - res is defined
        ok 11 - message is set
        ok 12 - statusCode is 200
        ok 13 - responseTime is defined
    ok 20 - file option # time=42.463ms
    
    # Subtest: should log the error if no error handler is defined
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - message is set
        ok 8 - status code is set
    ok 21 - should log the error if no error handler is defined # time=18.22ms
    
    # Subtest: should log as info if error status code >= 400 and < 500 if no error handler is defined
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - message is set
        ok 8 - status code is set
    ok 22 - should log as info if error status code >= 400 and < 500 if no error handler is defined # time=15.499ms
    
    # Subtest: should log as error if error status code >= 500 if no error handler is defined
        1..8
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - message is set
        ok 8 - status code is set
    ok 23 - should log as error if error status code >= 500 if no error handler is defined # time=16.171ms
    
    # Subtest: should not log the error if error handler is defined
        1..7
        ok 1 - should not error
        ok 2 - listen at log message is ok
        ok 3 - message is set
        ok 4 - expect truthy value
        ok 5 - level is correct
        ok 6 - message is set
        ok 7 - status code is set
    ok 24 - should not log the error if error handler is defined # time=15.248ms
    
    # Subtest: should redact the authorization header if so specified
        1..7
        ok 1 - listen at log message is ok
        ok 2 - should not error
        ok 3 - authorization is redacted
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 25 - should redact the authorization header if so specified # time=20.696ms
    
    1..25
    # time=786ms
}

ok 29 - test/middleware.test.js # time=7853.732ms {
    # Subtest: use a middleware
        1..7
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - middleware called
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
    ok 1 - use a middleware # time=246.164ms
    
    # Subtest: cannot add middleware after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 2 - cannot add middleware after binding # time=16.259ms
    
    # Subtest: use cors
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 3 - use cors # time=21.886ms
    
    # Subtest: use helmet
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
    ok 4 - use helmet # time=28.387ms
    
    # Subtest: use helmet and cors
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equal
    ok 5 - use helmet and cors # time=16.698ms
    
    # Subtest: middlewares should support encapsulation / 1
        1..8
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
    ok 6 - middlewares should support encapsulation / 1 # time=21.698ms
    
    # Subtest: middlewares should support encapsulation / 2
        1..13
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - expect truthy value
        ok 9 - expect truthy value
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
    ok 7 - middlewares should support encapsulation / 2 # time=39.689ms
    
    # Subtest: middlewares should support encapsulation / 3
        1..15
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent
        ok 9 - expect truthy value
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 8 - middlewares should support encapsulation / 3 # time=39.212ms
    
    # Subtest: middlewares should support encapsulation / 4
        1..25
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect falsey value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
        ok 10 - expect truthy value
        ok 11 - expect truthy value
        ok 12 - expect falsey value
        ok 13 - expect falsey value
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
        ok 18 - expect truthy value
        ok 19 - expect truthy value
        ok 20 - expect truthy value
        ok 21 - expect truthy value
        ok 22 - should not error
        ok 23 - should be equal
        ok 24 - should be equal
        ok 25 - should be equivalent
    ok 9 - middlewares should support encapsulation / 4 # time=36.483ms
    
    # Subtest: middlewares should support encapsulation / 5
        1..9
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 10 - middlewares should support encapsulation / 5 # time=22.529ms
    
    # Subtest: middlewares should support encapsulation with prefix
        1..9
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 11 - middlewares should support encapsulation with prefix # time=20.829ms
    
    # Subtest: middlewares should support non-encapsulated plugins
        1..6
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 12 - middlewares should support non-encapsulated plugins # time=18.231ms
    
    # Subtest: use serve-static
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 13 - use serve-static # time=18.409ms
    
    # Subtest: middlewares with prefix
        1..5
        ok 1 - should not error
        # Subtest: /
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 2 - / # time=12.879ms
        
        # Subtest: /prefix
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 3 - /prefix # time=4.316ms
        
        # Subtest: /prefix/
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 4 - /prefix/ # time=8.986ms
        
        # Subtest: /prefix/inner
            1..2
            ok 1 - should not error
            ok 2 - should be equivalent
        ok 5 - /prefix/inner # time=6.34ms
        
    ok 14 - middlewares with prefix # time=51.049ms
    
    # Subtest: res.end should block middleware execution
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 15 - res.end should block middleware execution # time=12.398ms
    
    # Subtest: middlewares should be able to respond with a stream
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
    ok 16 - middlewares should be able to respond with a stream # time=13.929ms
    
    # Subtest: Use a middleware inside a plugin after an encapsulated plugin
        1..5
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 17 - Use a middleware inside a plugin after an encapsulated plugin # time=8.334ms
    
    # Subtest: middlewares should run in the order in which they are defined
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 18 - middlewares should run in the order in which they are defined # time=24.128ms
    
    1..18
    # time=807.577ms
}

ok 30 - test/options.error-handler.test.js # time=7156.564ms {
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - OPTIONS can be created # time=6.885ms
    
    # Subtest: OPTIONS without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - OPTIONS without schema can be created # time=3.787ms
    
    # Subtest: OPTIONS with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - OPTIONS with body and querystring # time=1.249ms
    
    # Subtest: OPTIONS with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - OPTIONS with bodyLimit option # time=1.71ms
    
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - OPTIONS can be created # time=2.121ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - OPTIONS - correctly replies # time=102.217ms
    
    # Subtest: OPTIONS - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - OPTIONS - correctly replies with very large body # time=14.071ms
    
    # Subtest: OPTIONS - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - OPTIONS - correctly replies if the content type has the charset # time=7.381ms
    
    # Subtest: OPTIONS without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - OPTIONS without schema - correctly replies # time=7.427ms
    
    # Subtest: OPTIONS with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - OPTIONS with body and querystring - correctly replies # time=4.06ms
    
    # Subtest: OPTIONS with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - OPTIONS with no body - correctly replies # time=15.33ms
    
    # Subtest: OPTIONS returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - OPTIONS returns 415 - incorrect media type if body is not json # time=10.007ms
    
    # Subtest: OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text # time=6.359ms
    
    # Subtest: OPTIONS returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 14 - OPTIONS returns 400 - Bad Request # time=11.306ms
    
    # Subtest: OPTIONS returns 413 - Payload Too Large
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 15 - OPTIONS returns 413 - Payload Too Large # time=7.823ms
    
    # Subtest: OPTIONS should fail with empty body and application/json content-type
        1..0
    ok 16 - OPTIONS should fail with empty body and application/json content-type # time=1.252ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - OPTIONS - correctly replies # time=6.386ms
    
    # Subtest: OPTIONS - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - OPTIONS - 400 on bad parameters # time=4.654ms
    
    # Subtest: OPTIONS - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - OPTIONS - input-validation coerce # time=7.725ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - OPTIONS - input-validation custom schema compiler # time=4.563ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - OPTIONS - input-validation joi schema compiler ok # time=7.003ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - OPTIONS - input-validation joi schema compiler ko # time=8.556ms
    
    # Subtest: OPTIONS - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - OPTIONS - input-validation instance custom schema compiler encapsulated # time=4.123ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - OPTIONS - input-validation custom schema compiler encapsulated # time=7.216ms
    
    ok 25 - type is object
    ok 26 - type is _Request
    ok 27 - type is object
    ok 28 - type is _Request
    ok 29 - type is object
    ok 30 - type is _Request
    ok 31 - type is object
    ok 32 - type is _Request
    ok 33 - type is object
    ok 34 - type is _Request
    1..34
    # time=737.963ms
}

ok 31 - test/options.test.js # time=6870.609ms {
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - OPTIONS can be created # time=16.131ms
    
    # Subtest: OPTIONS without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - OPTIONS without schema can be created # time=2.35ms
    
    # Subtest: OPTIONS with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - OPTIONS with body and querystring # time=1.106ms
    
    # Subtest: OPTIONS with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - OPTIONS with bodyLimit option # time=1.182ms
    
    # Subtest: OPTIONS can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - OPTIONS can be created # time=6.158ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - OPTIONS - correctly replies # time=88.984ms
    
    # Subtest: OPTIONS - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - OPTIONS - 400 on bad parameters # time=11.531ms
    
    # Subtest: OPTIONS - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - OPTIONS - input-validation coerce # time=4.339ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - OPTIONS - input-validation custom schema compiler # time=5.563ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - OPTIONS - input-validation joi schema compiler ok # time=8.567ms
    
    # Subtest: OPTIONS - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - OPTIONS - input-validation joi schema compiler ko # time=7.888ms
    
    # Subtest: OPTIONS - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 12 - OPTIONS - input-validation instance custom schema compiler encapsulated # time=6ms
    
    # Subtest: OPTIONS - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 13 - OPTIONS - input-validation custom schema compiler encapsulated # time=4.435ms
    
    # Subtest: OPTIONS - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 14 - OPTIONS - correctly replies # time=7.763ms
    
    # Subtest: OPTIONS - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 15 - OPTIONS - correctly replies with very large body # time=9.382ms
    
    # Subtest: OPTIONS - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - OPTIONS - correctly replies if the content type has the charset # time=8.823ms
    
    # Subtest: OPTIONS without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - OPTIONS without schema - correctly replies # time=4.014ms
    
    # Subtest: OPTIONS with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - OPTIONS with body and querystring - correctly replies # time=5.593ms
    
    # Subtest: OPTIONS with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 19 - OPTIONS with no body - correctly replies # time=13.062ms
    
    # Subtest: OPTIONS returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 20 - OPTIONS returns 415 - incorrect media type if body is not json # time=8.406ms
    
    # Subtest: OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 21 - OPTIONS returns 415 - should return 415 if Content-Type is not json or plain text # time=4.834ms
    
    # Subtest: OPTIONS returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 22 - OPTIONS returns 400 - Bad Request # time=10.671ms
    
    # Subtest: OPTIONS returns 413 - Payload Too Large
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 23 - OPTIONS returns 413 - Payload Too Large # time=6.405ms
    
    # Subtest: OPTIONS should fail with empty body and application/json content-type
        1..0
    ok 24 - OPTIONS should fail with empty body and application/json content-type # time=0.64ms
    
    1..24
    # time=667.917ms
}

ok 32 - test/output-validation.test.js # time=6227.173ms {
    # Subtest: shorthand - output string
        1..1
        ok 1 - (unnamed test)
    ok 1 - shorthand - output string # time=5.608ms
    
    # Subtest: shorthand - output number
        1..1
        ok 1 - (unnamed test)
    ok 2 - shorthand - output number # time=1.512ms
    
    # Subtest: wrong object for schema - output
        1..1
        ok 1 - (unnamed test)
    ok 3 - wrong object for schema - output # time=5.485ms
    
    # Subtest: empty response
        1..1
        ok 1 - (unnamed test)
    ok 4 - empty response # time=1.935ms
    
    # Subtest: unlisted response code
        1..1
        ok 1 - (unnamed test)
    ok 5 - unlisted response code # time=2.503ms
    
    ok 6 - should not error
    # Subtest: shorthand - string get ok
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - shorthand - string get ok # time=35.577ms
    
    # Subtest: shorthand - number get ok
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - shorthand - number get ok # time=10.509ms
    
    # Subtest: shorthand - wrong-object-for-schema
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - shorthand - wrong-object-for-schema # time=3.937ms
    
    # Subtest: shorthand - empty
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - shorthand - empty # time=5.217ms
    
    # Subtest: shorthand - 400
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - shorthand - 400 # time=7.216ms
    
    1..11
    # time=329.294ms
}

ok 33 - test/patch.error-handler.test.js # time=6488.536ms {
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PATCH can be created # time=14.666ms
    
    # Subtest: PATCH without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PATCH without schema can be created # time=1.481ms
    
    # Subtest: PATCH with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PATCH with body and querystring # time=1.198ms
    
    # Subtest: PATCH with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PATCH with bodyLimit option # time=1.213ms
    
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PATCH can be created # time=8.033ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PATCH - correctly replies # time=82.45ms
    
    # Subtest: PATCH - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PATCH - correctly replies with very large body # time=11.755ms
    
    # Subtest: PATCH - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PATCH - correctly replies if the content type has the charset # time=4.524ms
    
    # Subtest: PATCH without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PATCH without schema - correctly replies # time=11.159ms
    
    # Subtest: PATCH with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PATCH with body and querystring - correctly replies # time=3.903ms
    
    # Subtest: PATCH with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PATCH with no body - correctly replies # time=17.001ms
    
    # Subtest: PATCH returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PATCH returns 415 - incorrect media type if body is not json # time=10.868ms
    
    # Subtest: PATCH returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PATCH returns 400 - Bad Request # time=6.747ms
    
    # Subtest: PATCH returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PATCH returns 413 - Payload Too Large # time=18.378ms
    
    # Subtest: PATCH should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - should not error
        ok 4 - should be equivalent strictly
        ok 5 - should not error
        ok 6 - should be equivalent strictly
        ok 7 - should not error
        ok 8 - should be equivalent strictly
        ok 9 - should not error
        ok 10 - should be equivalent strictly
        ok 11 - should not error
        ok 12 - should be equivalent strictly
    ok 15 - PATCH should fail with empty body and application/json content-type # time=42.064ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PATCH - correctly replies # time=5.375ms
    
    # Subtest: PATCH - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PATCH - 400 on bad parameters # time=8.455ms
    
    # Subtest: PATCH - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PATCH - input-validation coerce # time=3.957ms
    
    # Subtest: PATCH - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PATCH - input-validation custom schema compiler # time=4.115ms
    
    # Subtest: PATCH - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PATCH - input-validation joi schema compiler ok # time=8.293ms
    
    # Subtest: PATCH - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PATCH - input-validation joi schema compiler ko # time=6.623ms
    
    # Subtest: PATCH - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PATCH - input-validation instance custom schema compiler encapsulated # time=7.608ms
    
    # Subtest: PATCH - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PATCH - input-validation custom schema compiler encapsulated # time=3.956ms
    
    ok 24 - type is object
    ok 25 - type is _Request
    ok 26 - type is object
    ok 27 - type is _Request
    ok 28 - type is object
    ok 29 - type is _Request
    ok 30 - type is object
    ok 31 - type is _Request
    ok 32 - type is object
    ok 33 - type is _Request
    ok 34 - type is object
    ok 35 - type is _Request
    ok 36 - type is object
    ok 37 - type is _Request
    ok 38 - type is object
    ok 39 - type is _Request
    ok 40 - type is object
    ok 41 - type is _Request
    ok 42 - type is object
    ok 43 - type is _Request
    ok 44 - type is object
    ok 45 - type is _Request
    ok 46 - type is object
    ok 47 - type is _Request
    1..47
    # time=790.903ms
}

ok 34 - test/patch.test.js # time=6520.229ms {
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PATCH can be created # time=17.147ms
    
    # Subtest: PATCH without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PATCH without schema can be created # time=2.247ms
    
    # Subtest: PATCH with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PATCH with body and querystring # time=1.508ms
    
    # Subtest: PATCH with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PATCH with bodyLimit option # time=1.167ms
    
    # Subtest: PATCH can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PATCH can be created # time=2.718ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PATCH - correctly replies # time=116.731ms
    
    # Subtest: PATCH - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PATCH - correctly replies with very large body # time=14.701ms
    
    # Subtest: PATCH - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PATCH - correctly replies if the content type has the charset # time=5.62ms
    
    # Subtest: PATCH without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PATCH without schema - correctly replies # time=6.932ms
    
    # Subtest: PATCH with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PATCH with body and querystring - correctly replies # time=4.722ms
    
    # Subtest: PATCH with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PATCH with no body - correctly replies # time=13.7ms
    
    # Subtest: PATCH returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PATCH returns 415 - incorrect media type if body is not json # time=7.309ms
    
    # Subtest: PATCH returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PATCH returns 400 - Bad Request # time=8.329ms
    
    # Subtest: PATCH returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PATCH returns 413 - Payload Too Large # time=18.66ms
    
    # Subtest: PATCH should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - should not error
        ok 4 - should be equivalent strictly
        ok 5 - should not error
        ok 6 - should be equivalent strictly
        ok 7 - should not error
        ok 8 - should be equivalent strictly
        ok 9 - should not error
        ok 10 - should be equivalent strictly
        ok 11 - should not error
        ok 12 - should be equivalent strictly
    ok 15 - PATCH should fail with empty body and application/json content-type # time=33.421ms
    
    # Subtest: PATCH - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PATCH - correctly replies # time=8.316ms
    
    # Subtest: PATCH - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PATCH - 400 on bad parameters # time=4.988ms
    
    # Subtest: PATCH - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PATCH - input-validation coerce # time=4.362ms
    
    # Subtest: PATCH - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PATCH - input-validation custom schema compiler # time=7.689ms
    
    # Subtest: PATCH - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PATCH - input-validation joi schema compiler ok # time=6.433ms
    
    # Subtest: PATCH - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PATCH - input-validation joi schema compiler ko # time=10.013ms
    
    # Subtest: PATCH - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PATCH - input-validation instance custom schema compiler encapsulated # time=4.065ms
    
    # Subtest: PATCH - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PATCH - input-validation custom schema compiler encapsulated # time=6.098ms
    
    1..23
    # time=929.16ms
}

ok 35 - test/plugin.test.js # time=6290.592ms {
    # Subtest: require a plugin
        1..1
        ok 1 - expect truthy value
    ok 1 - require a plugin # time=158.29ms
    
    # Subtest: fastify.register with fastify-plugin should not incapsulate his code
        1..10
        ok 1 - expect falsey value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 2 - fastify.register with fastify-plugin should not incapsulate his code # time=88.001ms
    
    # Subtest: fastify.register with fastify-plugin registers root level plugins
        1..15
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equivalent
        ok 12 - should not error
        ok 13 - should be equal
        ok 14 - should be equal
        ok 15 - should be equivalent
    ok 3 - fastify.register with fastify-plugin registers root level plugins # time=23.024ms
    
    # Subtest: check dependencies - should not throw
        1..12
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not error
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 4 - check dependencies - should not throw # time=22.789ms
    
    # Subtest: check dependencies - should throw
        1..12
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - expect truthy value
        ok 4 - expect falsey value
        ok 5 - expect falsey value
        ok 6 - should not error
        ok 7 - expect truthy value
        ok 8 - expect falsey value
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equivalent
    ok 5 - check dependencies - should throw # time=19.156ms
    
    # Subtest: plugin incapsulation
        1..10
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 6 - plugin incapsulation # time=24.478ms
    
    # Subtest: if a plugin raises an error and there is not a callback to handle it, the server must not start
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 7 - if a plugin raises an error and there is not a callback to handle it, the server must not start # time=6.812ms
    
    # Subtest: add hooks after route declaration
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 8 - add hooks after route declaration # time=17.531ms
    
    # Subtest: nested plugins
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
    ok 9 - nested plugins # time=20.262ms
    
    # Subtest: plugin metadata - decorators
        1..1
        ok 1 - expect truthy value
    ok 10 - plugin metadata - decorators # time=3.681ms
    
    # Subtest: plugin metadata - dependencies
        1..1
        ok 1 - everything right
    ok 11 - plugin metadata - dependencies # time=6.142ms
    
    # Subtest: plugin metadata - dependencies (nested)
        1..1
        ok 1 - everything right
    ok 12 - plugin metadata - dependencies (nested) # time=3.694ms
    
    # Subtest: pluginTimeout
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 13 - pluginTimeout # time=15.06ms
    
    # Subtest: pluginTimeout default
        1..2
        ok 1 - expect truthy value
        ok 2 - should be equal
    ok 14 - pluginTimeout default # time=5.655ms
    
    1..14
    # time=592.618ms
}

ok 36 - test/post.test.js # time=6349.954ms {
    # Subtest: POST can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - POST can be created # time=6.236ms
    
    # Subtest: POST without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - POST without schema can be created # time=1.505ms
    
    # Subtest: POST with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - POST with body and querystring # time=2.154ms
    
    # Subtest: POST with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - POST with bodyLimit option # time=1.124ms
    
    # Subtest: POST can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - POST can be created # time=6.032ms
    
    # Subtest: cannot set schemaCompiler after binding
        1..2
        ok 1 - should not error
        ok 2 - (unnamed test)
    ok 6 - cannot set schemaCompiler after binding # time=131.025ms
    
    # Subtest: POST - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - POST - correctly replies # time=105.844ms
    
    # Subtest: POST - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - POST - correctly replies with very large body # time=10.263ms
    
    # Subtest: POST - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - POST - correctly replies if the content type has the charset # time=6.099ms
    
    # Subtest: POST without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - POST without schema - correctly replies # time=4.688ms
    
    # Subtest: POST with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 11 - POST with body and querystring - correctly replies # time=7.456ms
    
    # Subtest: POST with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 12 - POST with no body - correctly replies # time=16.476ms
    
    # Subtest: POST returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 13 - POST returns 415 - incorrect media type if body is not json # time=5.667ms
    
    # Subtest: POST returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 14 - POST returns 400 - Bad Request # time=11.259ms
    
    # Subtest: POST returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 15 - POST returns 413 - Payload Too Large # time=18.396ms
    
    # Subtest: POST should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - should not error
        ok 4 - should be equivalent strictly
        ok 5 - should not error
        ok 6 - should be equivalent strictly
        ok 7 - should not error
        ok 8 - should be equivalent strictly
        ok 9 - should not error
        ok 10 - should be equivalent strictly
        ok 11 - should not error
        ok 12 - should be equivalent strictly
    ok 16 - POST should fail with empty body and application/json content-type # time=37.581ms
    
    # Subtest: POST - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - POST - correctly replies # time=9.686ms
    
    # Subtest: POST - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - POST - 400 on bad parameters # time=4.741ms
    
    # Subtest: POST - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - POST - input-validation coerce # time=5.305ms
    
    # Subtest: POST - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - POST - input-validation custom schema compiler # time=5.799ms
    
    # Subtest: POST - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - POST - input-validation joi schema compiler ok # time=5.821ms
    
    # Subtest: POST - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - POST - input-validation joi schema compiler ko # time=9.425ms
    
    # Subtest: POST - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - POST - input-validation instance custom schema compiler encapsulated # time=4.336ms
    
    # Subtest: POST - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 24 - POST - input-validation custom schema compiler encapsulated # time=4.809ms
    
    1..24
    # time=775.719ms
}

ok 37 - test/pretty-print.test.js # time=6163.01ms {
    # Subtest: pretty print - static routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - pretty print - static routes # time=65.171ms
    
    # Subtest: pretty print - parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 2 - pretty print - parametric routes # time=17.629ms
    
    # Subtest: pretty print - mixed parametric routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - pretty print - mixed parametric routes # time=12.574ms
    
    # Subtest: pretty print - wildcard routes
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - pretty print - wildcard routes # time=16.15ms
    
    1..4
    # time=252.177ms
}

ok 38 - test/promises.test.js # time=6364.899ms {
    ok 1 - should not error
    # Subtest: shorthand - sget return promise es6 get
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - shorthand - sget return promise es6 get # time=39.619ms
    
    # Subtest: shorthand - sget promise es6 get return error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 3 - shorthand - sget promise es6 get return error # time=11.195ms
    
    # Subtest: sget promise double send
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - sget promise double send # time=4.437ms
    
    1..4
    # time=189.758ms
}

ok 39 - test/proto-poisoning.test.js # time=6062.708ms {
    # Subtest: proto-poisoning error
        1..3
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
    ok 1 - proto-poisoning error # time=150.982ms
    
    # Subtest: proto-poisoning remove
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - proto-poisoning remove # time=43.432ms
    
    # Subtest: proto-poisoning ignore
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 3 - proto-poisoning ignore # time=43.13ms
    
    1..3
    # time=359.747ms
}

ok 40 - test/put.error-handler.test.js # time=6294.765ms {
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PUT can be created # time=13.879ms
    
    # Subtest: PUT without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PUT without schema can be created # time=2.469ms
    
    # Subtest: PUT with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PUT with body and querystring # time=1.225ms
    
    # Subtest: PUT with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PUT with bodyLimit option # time=2.236ms
    
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PUT can be created # time=12.209ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PUT - correctly replies # time=93.746ms
    
    # Subtest: PUT - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PUT - correctly replies with very large body # time=16.711ms
    
    # Subtest: PUT - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PUT - correctly replies if the content type has the charset # time=4.425ms
    
    # Subtest: PUT without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PUT without schema - correctly replies # time=8.216ms
    
    # Subtest: PUT with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PUT with body and querystring - correctly replies # time=3.953ms
    
    # Subtest: PUT with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PUT with no body - correctly replies # time=15.041ms
    
    # Subtest: PUT returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PUT returns 415 - incorrect media type if body is not json # time=5.642ms
    
    # Subtest: PUT returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PUT returns 400 - Bad Request # time=11.16ms
    
    # Subtest: PUT returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PUT returns 413 - Payload Too Large # time=18.999ms
    
    # Subtest: PUT should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - should not error
        ok 4 - should be equivalent strictly
        ok 5 - should not error
        ok 6 - should be equivalent strictly
        ok 7 - should not error
        ok 8 - should be equivalent strictly
        ok 9 - should not error
        ok 10 - should be equivalent strictly
        ok 11 - should not error
        ok 12 - should be equivalent strictly
    ok 15 - PUT should fail with empty body and application/json content-type # time=35.609ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PUT - correctly replies # time=9.491ms
    
    # Subtest: PUT - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PUT - 400 on bad parameters # time=7.609ms
    
    # Subtest: PUT - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PUT - input-validation coerce # time=5.963ms
    
    # Subtest: PUT - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PUT - input-validation custom schema compiler # time=4.63ms
    
    # Subtest: PUT - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PUT - input-validation joi schema compiler ok # time=8.524ms
    
    # Subtest: PUT - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PUT - input-validation joi schema compiler ko # time=5.808ms
    
    # Subtest: PUT - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PUT - input-validation instance custom schema compiler encapsulated # time=4.988ms
    
    # Subtest: PUT - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PUT - input-validation custom schema compiler encapsulated # time=5.759ms
    
    ok 24 - type is object
    ok 25 - type is _Request
    ok 26 - type is object
    ok 27 - type is _Request
    ok 28 - type is object
    ok 29 - type is _Request
    ok 30 - type is object
    ok 31 - type is _Request
    ok 32 - type is object
    ok 33 - type is _Request
    ok 34 - type is object
    ok 35 - type is _Request
    ok 36 - type is object
    ok 37 - type is _Request
    ok 38 - type is object
    ok 39 - type is _Request
    ok 40 - type is object
    ok 41 - type is _Request
    ok 42 - type is object
    ok 43 - type is _Request
    ok 44 - type is object
    ok 45 - type is _Request
    ok 46 - type is object
    ok 47 - type is _Request
    1..47
    # time=724.302ms
}

ok 41 - test/put.test.js # time=6034.027ms {
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 1 - PUT can be created # time=7.087ms
    
    # Subtest: PUT without schema can be created
        1..1
        ok 1 - (unnamed test)
    ok 2 - PUT without schema can be created # time=2.552ms
    
    # Subtest: PUT with body and querystring
        1..1
        ok 1 - (unnamed test)
    ok 3 - PUT with body and querystring # time=3.074ms
    
    # Subtest: PUT with bodyLimit option
        1..1
        ok 1 - (unnamed test)
    ok 4 - PUT with bodyLimit option # time=3.732ms
    
    # Subtest: PUT can be created
        1..1
        ok 1 - (unnamed test)
    ok 5 - PUT can be created # time=2.595ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - PUT - correctly replies # time=68.327ms
    
    # Subtest: PUT - correctly replies with very large body
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - PUT - correctly replies with very large body # time=12.522ms
    
    # Subtest: PUT - correctly replies if the content type has the charset
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 8 - PUT - correctly replies if the content type has the charset # time=10.764ms
    
    # Subtest: PUT without schema - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 9 - PUT without schema - correctly replies # time=4.176ms
    
    # Subtest: PUT with body and querystring - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 10 - PUT with body and querystring - correctly replies # time=5.015ms
    
    # Subtest: PUT with no body - correctly replies
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 11 - PUT with no body - correctly replies # time=15.439ms
    
    # Subtest: PUT returns 415 - incorrect media type if body is not json
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 12 - PUT returns 415 - incorrect media type if body is not json # time=8.954ms
    
    # Subtest: PUT returns 400 - Bad Request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 13 - PUT returns 400 - Bad Request # time=7.828ms
    
    # Subtest: PUT returns 413 - Payload Too Large
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
    ok 14 - PUT returns 413 - Payload Too Large # time=19.411ms
    
    # Subtest: PUT should fail with empty body and application/json content-type
        1..12
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - should not error
        ok 4 - should be equivalent strictly
        ok 5 - should not error
        ok 6 - should be equivalent strictly
        ok 7 - should not error
        ok 8 - should be equivalent strictly
        ok 9 - should not error
        ok 10 - should be equivalent strictly
        ok 11 - should not error
        ok 12 - should be equivalent strictly
    ok 15 - PUT should fail with empty body and application/json content-type # time=38.786ms
    
    # Subtest: PUT - correctly replies
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - PUT - correctly replies # time=5.705ms
    
    # Subtest: PUT - 400 on bad parameters
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - PUT - 400 on bad parameters # time=8.091ms
    
    # Subtest: PUT - input-validation coerce
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - PUT - input-validation coerce # time=3.946ms
    
    # Subtest: PUT - input-validation custom schema compiler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 19 - PUT - input-validation custom schema compiler # time=4.064ms
    
    # Subtest: PUT - input-validation joi schema compiler ok
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - PUT - input-validation joi schema compiler ok # time=9.544ms
    
    # Subtest: PUT - input-validation joi schema compiler ko
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - PUT - input-validation joi schema compiler ko # time=5.374ms
    
    # Subtest: PUT - input-validation instance custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - PUT - input-validation instance custom schema compiler encapsulated # time=7.702ms
    
    # Subtest: PUT - input-validation custom schema compiler encapsulated
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - PUT - input-validation custom schema compiler encapsulated # time=6.271ms
    
    1..23
    # time=675.777ms
}

ok 42 - test/register.test.js # time=5986.078ms {
    # Subtest: register
        1..17
        ok 1 - should not be equal
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should not be equal
        ok 6 - expect truthy value
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should not error
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equivalent
        ok 14 - should not error
        ok 15 - should be equal
        ok 16 - should be equal
        ok 17 - should be equivalent
    ok 1 - register # time=134.661ms
    
    # Subtest: internal route declaration should pass the error generated by the register to the next handler / 1
        1..1
        ok 1 - should be equal
    ok 2 - internal route declaration should pass the error generated by the register to the next handler / 1 # time=15.22ms
    
    # Subtest: internal route declaration should pass the error generated by the register to the next handler / 2
        1..2
        ok 1 - should be equal
        ok 2 - should not error
    ok 3 - internal route declaration should pass the error generated by the register to the next handler / 2 # time=17.898ms
    
    1..3
    # time=320.853ms
}

ok 43 - test/reply-error.test.js # time=7336.448ms {
    # Subtest: Reply error handling - code: 400
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - Reply error handling - code: 400 # time=363.764ms
    
    # Subtest: Reply error handling - code: 401
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 2 - Reply error handling - code: 401 # time=8.59ms
    
    # Subtest: Reply error handling - code: 402
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 3 - Reply error handling - code: 402 # time=8.206ms
    
    # Subtest: Reply error handling - code: 403
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - Reply error handling - code: 403 # time=4.975ms
    
    # Subtest: Reply error handling - code: 404
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 5 - Reply error handling - code: 404 # time=7.469ms
    
    # Subtest: Reply error handling - code: 405
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 6 - Reply error handling - code: 405 # time=18.681ms
    
    # Subtest: Reply error handling - code: 406
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 7 - Reply error handling - code: 406 # time=5.455ms
    
    # Subtest: Reply error handling - code: 407
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - Reply error handling - code: 407 # time=5.594ms
    
    # Subtest: Reply error handling - code: 408
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - Reply error handling - code: 408 # time=7.935ms
    
    # Subtest: Reply error handling - code: 409
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - Reply error handling - code: 409 # time=12.288ms
    
    # Subtest: Reply error handling - code: 410
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 11 - Reply error handling - code: 410 # time=7.309ms
    
    # Subtest: Reply error handling - code: 411
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - Reply error handling - code: 411 # time=11.721ms
    
    # Subtest: Reply error handling - code: 412
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - Reply error handling - code: 412 # time=5.323ms
    
    # Subtest: Reply error handling - code: 413
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - Reply error handling - code: 413 # time=10.934ms
    
    # Subtest: Reply error handling - code: 414
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - Reply error handling - code: 414 # time=5.42ms
    
    # Subtest: Reply error handling - code: 415
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 16 - Reply error handling - code: 415 # time=10.593ms
    
    # Subtest: Reply error handling - code: 416
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 17 - Reply error handling - code: 416 # time=14.446ms
    
    # Subtest: Reply error handling - code: 417
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 18 - Reply error handling - code: 417 # time=5.327ms
    
    # Subtest: Reply error handling - code: 418
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 19 - Reply error handling - code: 418 # time=12.327ms
    
    # Subtest: Reply error handling - code: 421
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 20 - Reply error handling - code: 421 # time=5.894ms
    
    # Subtest: Reply error handling - code: 422
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 21 - Reply error handling - code: 422 # time=10.148ms
    
    # Subtest: Reply error handling - code: 423
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 22 - Reply error handling - code: 423 # time=11.57ms
    
    # Subtest: Reply error handling - code: 424
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 23 - Reply error handling - code: 424 # time=5.4ms
    
    # Subtest: Reply error handling - code: 425
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 24 - Reply error handling - code: 425 # time=4.187ms
    
    # Subtest: Reply error handling - code: 426
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 25 - Reply error handling - code: 426 # time=23.949ms
    
    # Subtest: Reply error handling - code: 428
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 26 - Reply error handling - code: 428 # time=7.091ms
    
    # Subtest: Reply error handling - code: 429
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 27 - Reply error handling - code: 429 # time=6.808ms
    
    # Subtest: Reply error handling - code: 431
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 28 - Reply error handling - code: 431 # time=4.14ms
    
    # Subtest: Reply error handling - code: 451
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 29 - Reply error handling - code: 451 # time=11.677ms
    
    # Subtest: Reply error handling - code: 500
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 30 - Reply error handling - code: 500 # time=31.389ms
    
    # Subtest: Reply error handling - code: 501
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 31 - Reply error handling - code: 501 # time=5.656ms
    
    # Subtest: Reply error handling - code: 502
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 32 - Reply error handling - code: 502 # time=7.363ms
    
    # Subtest: Reply error handling - code: 503
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 33 - Reply error handling - code: 503 # time=19.86ms
    
    # Subtest: Reply error handling - code: 504
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 34 - Reply error handling - code: 504 # time=6.182ms
    
    # Subtest: Reply error handling - code: 505
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 35 - Reply error handling - code: 505 # time=8.987ms
    
    # Subtest: Reply error handling - code: 506
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 36 - Reply error handling - code: 506 # time=19.905ms
    
    # Subtest: Reply error handling - code: 507
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 37 - Reply error handling - code: 507 # time=4.182ms
    
    # Subtest: Reply error handling - code: 508
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 38 - Reply error handling - code: 508 # time=8.546ms
    
    # Subtest: Reply error handling - code: 509
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 39 - Reply error handling - code: 509 # time=3.697ms
    
    # Subtest: Reply error handling - code: 510
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 40 - Reply error handling - code: 510 # time=3.389ms
    
    # Subtest: Reply error handling - code: 511
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 41 - Reply error handling - code: 511 # time=8.415ms
    
    # Subtest: preHandler hook error handling with external code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 42 - preHandler hook error handling with external code # time=15.467ms
    
    # Subtest: onRequest hook error handling with external done
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 43 - onRequest hook error handling with external done # time=4.742ms
    
    # Subtest: Should reply 400 on client error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 44 - Should reply 400 on client error # time=148.513ms
    
    # Subtest: Error instance sets HTTP status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 45 - Error instance sets HTTP status code # time=5.703ms
    
    # Subtest: Error status code below 400 defaults to 500
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 46 - Error status code below 400 defaults to 500 # time=7.841ms
    
    # Subtest: Error.status property support
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 47 - Error.status property support # time=21.655ms
    
    # Subtest: Support rejection with values that are not Error instances
        1..11
        # Subtest: Type: number
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 1 - Type: number # time=61.544ms
        
        # Subtest: Type: string
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 2 - Type: string # time=11.867ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 3 - Type: object # time=10.334ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 4 - Type: object # time=4.165ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 5 - Type: object # time=35.543ms
        
        # Subtest: Type: undefined
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 6 - Type: undefined # time=8.015ms
        
        # Subtest: Type: number
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 7 - Type: number # time=6.3ms
        
        # Subtest: Type: string
            1..4
            ok 1 - should be equal
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 8 - Type: string # time=27.619ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 9 - Type: object # time=4.141ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 10 - Type: object # time=8.85ms
        
        # Subtest: Type: object
            1..4
            ok 1 - should be equivalent
            ok 2 - should not error
            ok 3 - should be equal
            ok 4 - should be equal
        ok 11 - Type: object # time=3.756ms
        
    ok 48 - Support rejection with values that are not Error instances # time=266.201ms
    
    # Subtest: invalid schema - ajv
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 49 - invalid schema - ajv # time=43.576ms
    
    # Subtest: should set the status code and the headers from the error object (from route handler)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 50 - should set the status code and the headers from the error object (from route handler) # time=4.759ms
    
    # Subtest: should set the status code and the headers from the error object (from custom error handler)
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 51 - should set the status code and the headers from the error object (from custom error handler) # time=6.347ms
    
    # Subtest: '*' should throw an error due to serializer can not handle the payload type
        1..3
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - should be equal
    ok 52 - '*' should throw an error due to serializer can not handle the payload type # time=7.814ms
    
    # Subtest: should throw an error if the custom serializer does not serialize the payload to a valid type
        1..3
        ok 1 - type is TypeError
        ok 2 - should be equal
        ok 3 - should be equal
    ok 53 - should throw an error if the custom serializer does not serialize the payload to a valid type # time=14.498ms
    
    1..53
    # time=1400.049ms
}

ok 44 - test/request-error.test.js # time=6070.05ms {
    # Subtest: default 400 on request error
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 1 - default 400 on request error # time=122.06ms
    
    # Subtest: default 400 on request error with custom error handler
        1..6
        ok 1 - type is object
        ok 2 - type is _Request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 2 - default 400 on request error with custom error handler # time=17.793ms
    
    1..2
    # time=229.654ms
}

ok 45 - test/route-prefix.test.js # time=6133.009ms {
    # Subtest: Prefix options should add a prefix for all the routes inside a register / 1
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 1 - Prefix options should add a prefix for all the routes inside a register / 1 # time=154.283ms
    
    # Subtest: Prefix options should add a prefix for all the routes inside a register / 2
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 2 - Prefix options should add a prefix for all the routes inside a register / 2 # time=15.431ms
    
    # Subtest: Prefix options should add a prefix for all the chained routes inside a register / 3
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 3 - Prefix options should add a prefix for all the chained routes inside a register / 3 # time=7.642ms
    
    # Subtest: Prefix should support parameters as well
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 4 - Prefix should support parameters as well # time=9.404ms
    
    # Subtest: Prefix should support /
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 5 - Prefix should support / # time=9.016ms
    
    # Subtest: Prefix without /
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 6 - Prefix without / # time=6.699ms
    
    # Subtest: Prefix with trailing /
        1..6
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
    ok 7 - Prefix with trailing / # time=14.374ms
    
    # Subtest: Prefix works multiple levels deep
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 8 - Prefix works multiple levels deep # time=10.496ms
    
    # Subtest: Different register - encapsulation check
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 9 - Different register - encapsulation check # time=9.493ms
    
    # Subtest: Can retrieve prefix within encapsulated instances
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 10 - Can retrieve prefix within encapsulated instances # time=14.834ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 11 - matches both /prefix and /prefix/ with a / route # time=11.524ms
    
    # Subtest: prefix "/prefix/" does not match "/prefix" with a / route
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 12 - prefix "/prefix/" does not match "/prefix" with a / route # time=10.723ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 13 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true # time=8.465ms
    
    # Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: false
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 14 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: false # time=14.076ms
    
    1..14
    # time=435.433ms
}

ok 46 - test/route.test.js # time=5987.087ms {
    # Subtest: route
        1..10
        # Subtest: route - get
            1..1
            ok 1 - (unnamed test)
        ok 1 - route - get # time=13.191ms
        
        # Subtest: missing schema - route
            1..1
            ok 1 - (unnamed test)
        ok 2 - missing schema - route # time=14.343ms
        
        # Subtest: invalid handler attribute - route
            1..1
            ok 1 - (unnamed test)
        ok 3 - invalid handler attribute - route # time=1.19ms
        
        # Subtest: invalid schema - route
            1..1
            ok 1 - expect truthy value
        ok 4 - invalid schema - route # time=109.772ms
        
        # Subtest: Multiple methods
            1..1
            ok 1 - (unnamed test)
        ok 5 - Multiple methods # time=1.269ms
        
        # Subtest: Add multiple methods
            1..1
            ok 1 - (unnamed test)
        ok 6 - Add multiple methods # time=6.469ms
        
        # Subtest: cannot add another route after binding
            1..1
            ok 1 - (unnamed test)
        ok 7 - cannot add another route after binding # time=4.444ms
        
        # Subtest: route - get
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 8 - route - get # time=104.649ms
        
        # Subtest: route - missing schema
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 9 - route - missing schema # time=18.784ms
        
        # Subtest: route - multiple methods
            1..6
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
            ok 4 - should not error
            ok 5 - should be equal
            ok 6 - should be equivalent
        ok 10 - route - multiple methods # time=25.887ms
        
    ok 1 - route # time=467.436ms
    
    # Subtest: path can be specified in place of uri
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 2 - path can be specified in place of uri # time=19.903ms
    
    # Subtest: invalid bodyLimit option - route
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - invalid bodyLimit option - route # time=2.063ms
    
    # Subtest: handler function in options of shorthand route should works correctly
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 4 - handler function in options of shorthand route should works correctly # time=9.891ms
    
    1..4
    # time=648.691ms
}

ok 47 - test/router-options.test.js # time=7413.194ms {
    # Subtest: Should honor ignoreTrailingSlash option
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 1 - Should honor ignoreTrailingSlash option # time=428.575ms
    
    # Subtest: Should honor maxParamLength option
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 2 - Should honor maxParamLength option # time=21.039ms
    
    # Subtest: preHandler
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 3 - preHandler # time=61.056ms
    
    # Subtest: preHandler option should be called after preHandler hook
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 4 - preHandler option should be called after preHandler hook # time=7.721ms
    
    # Subtest: preHandler option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 5 - preHandler option should be unique per route # time=15.863ms
    
    # Subtest: preHandler option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 6 - preHandler option should handle errors # time=7.009ms
    
    # Subtest: preHandler option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 7 - preHandler option should handle errors with custom status code # time=6.693ms
    
    # Subtest: preHandler option could accept an array of functions
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 8 - preHandler option could accept an array of functions # time=9.146ms
    
    # Subtest: preHandler option does not interfere with preHandler hook
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 9 - preHandler option does not interfere with preHandler hook # time=10.821ms
    
    # Subtest: preHandler option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 10 - preHandler option should keep the context # time=8.34ms
    
    # Subtest: preHandler option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 11 - preHandler option should keep the context (array) # time=12.006ms
    
    # Subtest: Backwards compatibility with beforeHandler option (should emit a warning)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 12 - Backwards compatibility with beforeHandler option (should emit a warning) # time=11.126ms
    
    # Subtest: preValidation option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 13 - preValidation option # time=6.507ms
    
    # Subtest: preValidation option should be called before preHandler hook
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 14 - preValidation option should be called before preHandler hook # time=9.911ms
    
    # Subtest: preValidation option should be unique per route
        1..4
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 15 - preValidation option should be unique per route # time=9.828ms
    
    # Subtest: preValidation option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 16 - preValidation option should handle errors # time=28.207ms
    
    # Subtest: preValidation option should handle errors with custom status code
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 17 - preValidation option should handle errors with custom status code # time=18.664ms
    
    # Subtest: preValidation option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 18 - preValidation option could accept an array of functions # time=9.796ms
    
    # Subtest: preValidation option should keep the context
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 19 - preValidation option should keep the context # time=30.432ms
    
    # Subtest: preValidation option should keep the context (array)
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 20 - preValidation option should keep the context (array) # time=8.096ms
    
    # Subtest: preSerialization option should be able to modify the payload
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 21 - preSerialization option should be able to modify the payload # time=9.995ms
    
    # Subtest: preSerialization option should handle errors
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 22 - preSerialization option should handle errors # time=5.481ms
    
    # Subtest: preSerialization option could accept an array of functions
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 23 - preSerialization option could accept an array of functions # time=17.739ms
    
    # Subtest: preParsing option
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 24 - preParsing option # time=17.818ms
    
    # Subtest: preParsing option should be called before preValidation hook
        1..3
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equivalent
    ok 25 - preParsing option should be called before preValidation hook # time=7.733ms
    
    # Subtest: preParsing option could accept an array of functions
        1..4
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - should be equivalent
    ok 26 - preParsing option could accept an array of functions # time=10.79ms
    
    1..26
    # time=933.331ms
}

ok 48 - test/shared-schemas.test.js # time=8011.536ms {
    # Subtest: Should expose addSchema function
        1..1
        ok 1 - should be equal
    ok 1 - Should expose addSchema function # time=17.141ms
    
    # Subtest: Should expose getSchemas function
        1..1
        ok 1 - should be equal
    ok 2 - Should expose getSchemas function # time=3.767ms
    
    # Subtest: The schemas should be added to an internal store
        1..1
        ok 1 - should be equivalent
    ok 3 - The schemas should be added to an internal store # time=2.632ms
    
    # Subtest: The schemas should be accessible via getSchemas
        1..1
        ok 1 - should be equivalent
    ok 4 - The schemas should be accessible via getSchemas # time=2.468ms
    
    # Subtest: Should throw if the $id property is missing
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - Should throw if the $id property is missing # time=3.405ms
    
    # Subtest: Cannot add multiple times the same id
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - Cannot add multiple times the same id # time=2.839ms
    
    # Subtest: Should throw of the schema does not exists
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - Should throw of the schema does not exists # time=203.953ms
    
    # Subtest: Should use a stored schema
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - Should use a stored schema # time=106.601ms
    
    # Subtest: Should work with nested ids
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - Should work with nested ids # time=68.852ms
    
    # Subtest: Use the same schema across multiple routes
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 10 - Use the same schema across multiple routes # time=23.9ms
    
    # Subtest: Encapsulation should intervene
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 11 - Encapsulation should intervene # time=10.189ms
    
    # Subtest: Encapsulation isolation
        1..1
        ok 1 - should not error
    ok 12 - Encapsulation isolation # time=4.104ms
    
    # Subtest: Encapsulation isolation for getSchemas
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equivalent
    ok 13 - Encapsulation isolation for getSchemas # time=18.313ms
    
    # Subtest: Encapsulation isolation for $ref to shared schema
        1..10
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should not error
        ok 9 - should be equal
        ok 10 - should be equivalent
    ok 14 - Encapsulation isolation for $ref to shared schema # time=59.645ms
    
    # Subtest: JSON Schema validation keywords
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 15 - JSON Schema validation keywords # time=19.986ms
    
    # Subtest: Nested id calls
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 16 - Nested id calls # time=15.954ms
    
    # Subtest: Use the same schema id in diferent places
        1..1
        ok 1 - should not error
    ok 17 - Use the same schema id in diferent places # time=22.004ms
    
    # Subtest: Use shared schema and $ref with $id ($ref to $id)
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 18 - Use shared schema and $ref with $id ($ref to $id) # time=27.89ms
    
    # Subtest: Use shared schema and $ref with $id in response ($ref to $id)
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 19 - Use shared schema and $ref with $id in response ($ref to $id) # time=26.421ms
    
    # Subtest: The schema resolver should clean the $id key before passing it to the compiler
        1..1
        ok 1 - should not error
    ok 20 - The schema resolver should clean the $id key before passing it to the compiler # time=37.611ms
    
    # Subtest: Get schema anyway should not add `properties` if allOf is present
        1..1
        ok 1 - should not error
    ok 21 - Get schema anyway should not add `properties` if allOf is present # time=20.481ms
    
    # Subtest: Get schema anyway should not add `properties` if oneOf is present
        1..1
        ok 1 - should not error
    ok 22 - Get schema anyway should not add `properties` if oneOf is present # time=16.639ms
    
    # Subtest: Get schema anyway should not add `properties` if anyOf is present
        1..1
        ok 1 - should not error
    ok 23 - Get schema anyway should not add `properties` if anyOf is present # time=17.527ms
    
    # Subtest: Shared schema should be pass to serializer and validator ($ref to shared schema /definitions)
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 24 - Shared schema should be pass to serializer and validator ($ref to shared schema /definitions) # time=29.717ms
    
    # Subtest: Shared schema should be pass to serializer and validator ($ref to shared schema $id)
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 25 - Shared schema should be pass to serializer and validator ($ref to shared schema $id) # time=28.151ms
    
    # Subtest: Use shared schema and $ref
        1..1
        ok 1 - should not error
    ok 26 - Use shared schema and $ref # time=11.267ms
    
    # Subtest: Use shared schema and $ref to /definitions
        1..2
        ok 1 - should not error
        ok 2 - should be equivalent
    ok 27 - Use shared schema and $ref to /definitions # time=23.237ms
    
    # Subtest: Cross shared schema reference
        1..1
        ok 1 - should not error
    ok 28 - Cross shared schema reference # time=31.435ms
    
    # Subtest: Cross shared schema reference with unused shared schema
        1..1
        ok 1 - should not error
    ok 29 - Cross shared schema reference with unused shared schema # time=4.013ms
    
    # Subtest: Cross shared schema reference with multiple references
        1..1
        ok 1 - should not error
    ok 30 - Cross shared schema reference with multiple references # time=16.925ms
    
    # Subtest: Cross shared schema reference with encapsulation references
        1..1
        ok 1 - should not error
    ok 31 - Cross shared schema reference with encapsulation references # time=44.369ms
    
    1..31
    # time=1118.127ms
}

ok 49 - test/stream.test.js # time=7525.175ms {
    # Subtest: should respond with a stream
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 1 - should respond with a stream # time=191.544ms
    
    # Subtest: should trigger the onSend hook
        1..4
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 2 - should trigger the onSend hook # time=29.887ms
    
    # Subtest: should trigger the onSend hook only twice if pumping the stream fails, first with the stream, second with the serialized error
        1..5
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 3 - should trigger the onSend hook only twice if pumping the stream fails, first with the stream, second with the serialized error # time=23.285ms
    
    # Subtest: onSend hook stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - onSend hook stream # time=14.637ms
    
    # Subtest: Destroying streams prematurely
        1..5
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 5 - Destroying streams prematurely # time=26.795ms
    
    # Subtest: Destroying streams prematurely should call close method
        1..6
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - expect truthy value
    ok 6 - Destroying streams prematurely should call close method # time=16.132ms
    
    # Subtest: Destroying streams prematurely should call abort method
        1..6
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - expect truthy value
    ok 7 - Destroying streams prematurely should call abort method # time=14.967ms
    
    # Subtest: should respond with a stream1
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
    ok 8 - should respond with a stream1 # time=10.412ms
    
    # Subtest: return a 404 if the stream emits a 404 error
        1..5
        ok 1 - should not error
        ok 2 - Received request
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
    ok 9 - return a 404 if the stream emits a 404 error # time=12.152ms
    
    # Subtest: should support send module 200 and 404
        1..8
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 10 - should support send module 200 and 404 # time=25.234ms
    
    1..10
    # time=481.912ms
}

ok 50 - test/throw.test.js # time=7025.356ms {
    # Subtest: Fastify should throw on wrong options
        1..2
        ok 1 - should be equal
        ok 2 - (unnamed test)
    ok 1 - Fastify should throw on wrong options # time=13.693ms
    
    # Subtest: Fastify should throw on multiple assignment to the same route
        1..1
        ok 1 - should be equal
    ok 2 - Fastify should throw on multiple assignment to the same route # time=187.99ms
    
    # Subtest: Should throw on unsupported method
        1..1
        ok 1 - (unnamed test)
    ok 3 - Should throw on unsupported method # time=2.38ms
    
    # Subtest: Should throw on missing handler
        1..1
        ok 1 - (unnamed test)
    ok 4 - Should throw on missing handler # time=1.656ms
    
    # Subtest: Should throw if one method is unsupported
        1..1
        ok 1 - (unnamed test)
    ok 5 - Should throw if one method is unsupported # time=1.765ms
    
    # Subtest: Should throw on duplicate content type parser
        1..1
        ok 1 - (unnamed test)
    ok 6 - Should throw on duplicate content type parser # time=7.477ms
    
    # Subtest: Should throw on duplicate decorator
        1..1
        ok 1 - (unnamed test)
    ok 7 - Should throw on duplicate decorator # time=2.855ms
    
    # Subtest: Should not throw on duplicate decorator encapsulation
        1..1
        ok 1 - expected to not throw
    ok 8 - Should not throw on duplicate decorator encapsulation # time=3.569ms
    
    # Subtest: Should throw on duplicate request decorator
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 9 - Should throw on duplicate request decorator # time=2.085ms
    
    # Subtest: Should throw if request decorator dependencies are not met
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 10 - Should throw if request decorator dependencies are not met # time=7.258ms
    
    # Subtest: Should throw on duplicate reply decorator
        1..1
        ok 1 - expect truthy value
    ok 11 - Should throw on duplicate reply decorator # time=1.893ms
    
    # Subtest: Should throw if reply decorator dependencies are not met
        1..1
        ok 1 - expect truthy value
    ok 12 - Should throw if reply decorator dependencies are not met # time=1.688ms
    
    # Subtest: Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 13 - Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object # time=2.552ms
    
    # Subtest: Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 14 - Should throw if handler as the third parameter to the shortcut method is missing and the second parameter is not a function and also not an object # time=5.835ms
    
    # Subtest: Should throw if there is handler function as the third parameter to the shortcut method and options as the second parameter is not an object
        1..5
        ok 1 - (unnamed test)
        ok 2 - (unnamed test)
        ok 3 - (unnamed test)
        ok 4 - (unnamed test)
        ok 5 - (unnamed test)
    ok 15 - Should throw if there is handler function as the third parameter to the shortcut method and options as the second parameter is not an object # time=2.728ms
    
    # Subtest: Should throw if found duplicate handler as the third parameter to the shortcut method and in options
        1..1
        ok 1 - (unnamed test)
    ok 16 - Should throw if found duplicate handler as the third parameter to the shortcut method and in options # time=1.415ms
    
    1..16
    # time=394.414ms
}

ok 51 - test/trust-proxy.test.js # time=6922.24ms {
    # Subtest: trust proxy, add properties to node req
        1..15
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
        ok 4 - ip is defined
        ok 5 - gets ip from x-forwarder-for
        ok 6 - hostname is defined
        ok 7 - gets hostname from x-forwarded-host
        ok 8 - hostname is defined
        ok 9 - gets hostname from x-forwarded-host
        ok 10 - ip is defined
        ok 11 - gets ip from x-forwarder-for
        ok 12 - ip is defined
        ok 13 - gets ip from x-forwarder-for
        ok 14 - gets ips from x-forwarder-for
        ok 15 - gets ips from x-forwarder-for
    ok 1 - trust proxy, add properties to node req # time=168.123ms
    
    # Subtest: trust proxy, not add properties to node req
        1..8
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
        ok 4 - hostname is defined
        ok 5 - gets hostname from x-forwarded-host
        ok 6 - ip is defined
        ok 7 - gets ip from x-forwarder-for
        ok 8 - gets ips from x-forwarder-for
    ok 2 - trust proxy, not add properties to node req # time=25.593ms
    
    # Subtest: trust proxy chain
        1..3
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
    ok 3 - trust proxy chain # time=29.14ms
    
    # Subtest: trust proxy function
        1..3
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
    ok 4 - trust proxy function # time=12.917ms
    
    # Subtest: trust proxy number
        1..4
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
        ok 4 - gets ips from x-forwarder-for
    ok 5 - trust proxy number # time=9.432ms
    
    # Subtest: trust proxy IP addresses
        1..4
        ok 1 - should not error
        ok 2 - ip is defined
        ok 3 - gets ip from x-forwarder-for
        ok 4 - gets ips from x-forwarder-for
    ok 6 - trust proxy IP addresses # time=13.31ms
    
    1..6
    # time=354.986ms
}

ok 52 - test/validation-error-handling.test.js # time=6776.402ms {
    # Subtest: should work with valid payload
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 1 - should work with valid payload # time=222.618ms
    
    # Subtest: should fail immediately with invalid payload
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 2 - should fail immediately with invalid payload # time=36.902ms
    
    # Subtest: should be able to use setErrorHandler specify custom validation error
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 3 - should be able to use setErrorHandler specify custom validation error # time=49.763ms
    
    # Subtest: should be able to attach validation to request
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 4 - should be able to attach validation to request # time=42.381ms
    
    # Subtest: should respect when attachValidation is explicitly set to false
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 5 - should respect when attachValidation is explicitly set to false # time=40.054ms
    
    # Subtest: Attached validation error should take precendence over setErrorHandler
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 6 - Attached validation error should take precendence over setErrorHandler # time=26.619ms
    
    # Subtest: should handle response validation error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 7 - should handle response validation error # time=17.776ms
    
    # Subtest: should handle response validation error with promises
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 8 - should handle response validation error with promises # time=17.323ms
    
    # Subtest: should return a defined output message parsing AJV errors
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 9 - should return a defined output message parsing AJV errors # time=28.876ms
    
    # Subtest: should return a defined output message parsing JOI errors
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 10 - should return a defined output message parsing JOI errors # time=24.478ms
    
    # Subtest: should return a defined output message parsing JOI error details
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 11 - should return a defined output message parsing JOI error details # time=8.147ms
    
    1..11
    # time=623.287ms
}

ok 53 - test/versioned-routes.test.js # time=6842.676ms {
    # Subtest: Should register a versioned route
        1..11
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equal
    ok 1 - Should register a versioned route # time=108.927ms
    
    # Subtest: Should register the same route with different versions
        1..8
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 2 - Should register the same route with different versions # time=11.137ms
    
    # Subtest: The versioned route should take precedence
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
    ok 3 - The versioned route should take precedence # time=12.726ms
    
    # Subtest: Versioned route but not version header should return a 404
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 4 - Versioned route but not version header should return a 404 # time=7.838ms
    
    # Subtest: Should register a versioned route
        1..6
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equal
    ok 5 - Should register a versioned route # time=117.151ms
    
    # Subtest: Shorthand route declaration
        1..5
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 6 - Shorthand route declaration # time=18.062ms
    
    # Subtest: The not found handler should not use the Accept-Version header
        1..4
        ok 1 - expect falsey value
        ok 2 - should not error
        ok 3 - should be equivalent
        ok 4 - should be equal
    ok 7 - The not found handler should not use the Accept-Version header # time=6.144ms
    
    # Subtest: Bad accept version (inject)
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
    ok 8 - Bad accept version (inject) # time=10.777ms
    
    # Subtest: Bas accept version (server)
        1..5
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 9 - Bas accept version (server) # time=21.968ms
    
    # Subtest: test log stream
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 10 - test log stream # time=27.195ms
    
    # Subtest: Should register a versioned route with custome versioning strategy
        1..8
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
    ok 11 - Should register a versioned route with custome versioning strategy # time=12.297ms
    
    1..11
    # time=492.188ms
}

ok 54 - test/wrapThenable.test.js # time=4999.684ms {
    # Subtest: should resolve immediately when reply[kReplySentOverwritten] is true
        1..0
    ok 1 - should resolve immediately when reply[kReplySentOverwritten] is true # time=14.823ms
    
    # Subtest: should reject immediately when reply[kReplySentOverwritten] is true
        1..1
        ok 1 - should be equal
    ok 2 - should reject immediately when reply[kReplySentOverwritten] is true # time=2.707ms
    
    1..2
    # time=169.485ms
}

ok 55 - test/http2/http2.test.js # time=6834.563ms {
    ok 1 - http2 successfully loaded
    ok 2 - Key/cert successfully loaded
    ok 3 - Key/cert successfully loaded
    ok 4 - http2 successfully loaded
    # Subtest: should throw when http2 module cannot be found
        1..1
        ok 1 - should be equal
    ok 5 - should throw when http2 module cannot be found # time=40.575ms
    
    ok 6 - http2 successfully loaded
    ok 7 - should not error
    # Subtest: http UNKNOWN_METHOD request
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 8 - http UNKNOWN_METHOD request # time=55.637ms
    
    ok 9 - should not error
    ok 10 - http/2 request while fastify closing # SKIP
    ok 11 - should not error
    # Subtest: https get error
        1..1
        ok 1 - should be equal
    ok 12 - https get error # time=24.128ms
    
    # Subtest: https post
        1..2
        ok 1 - should be equal
        ok 2 - should be equivalent
    ok 13 - https post # time=13.745ms
    
    # Subtest: https get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 14 - https get request # time=12.237ms
    
    # Subtest: http1 get request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - http1 get request # time=21.977ms
    
    # Subtest: http1 get error
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 16 - http1 get error # time=11.203ms
    
    ok 17 - should not error
    # Subtest: https get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 18 - https get request # time=10.788ms
    
    ok 19 - should not error
    # Subtest: http get request
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equivalent
    ok 20 - http get request # time=6.593ms
    
    1..20
    # skip: 1
    # time=756.556ms
}

ok 56 - test/https/custom-https-server.test.js # time=5927.574ms {
    # Subtest: Should support a custom https server
        1..6
        ok 1 - expect truthy value
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 1 - Should support a custom https server # time=153.401ms
    
    1..1
    # time=273.742ms
}

ok 57 - test/https/https.test.js # time=6091.903ms {
    ok 1 - Key/cert successfully loaded
    # Subtest: https get
        1..1
        ok 1 - (unnamed test)
    ok 2 - https get # time=3.716ms
    
    ok 3 - should not error
    # Subtest: https get request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 4 - https get request # time=35.487ms
    
    1..4
    # time=322.529ms
}

ok 58 - test/internals/all.test.js # time=6239.732ms {
    # Subtest: fastify.all should add all the methods to the same url
        1..14
        ok 1 - should not error
        ok 2 - should be equivalent
        ok 3 - should not error
        ok 4 - should be equivalent
        ok 5 - should not error
        ok 6 - should be equivalent
        ok 7 - should not error
        ok 8 - should be equivalent
        ok 9 - should not error
        ok 10 - should be equivalent
        ok 11 - should not error
        ok 12 - should be equivalent
        ok 13 - should not error
        ok 14 - should be equivalent
    ok 1 - fastify.all should add all the methods to the same url # time=108.74ms
    
    1..1
    # time=250.89ms
}

ok 59 - test/internals/contentTypeParser.test.js # time=5434.194ms {
    # Subtest: rawBody function
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - rawBody function # time=6.478ms
    
    1..1
    # time=82.886ms
}

ok 60 - test/internals/decorator.test.js # time=5396.322ms {
    # Subtest: decorate should add the given method to its instance
        1..1
        ok 1 - expect truthy value
    ok 1 - decorate should add the given method to its instance # time=11.223ms
    
    # Subtest: decorate is chainable
        1..3
        ok 1 - expect truthy value
        ok 2 - expect truthy value
        ok 3 - expect truthy value
    ok 2 - decorate is chainable # time=4.227ms
    
    # Subtest: checkExistence should check if a property is part of the given instance
        1..1
        ok 1 - expect truthy value
    ok 3 - checkExistence should check if a property is part of the given instance # time=0.761ms
    
    # Subtest: checkExistence should find the instance if not given
        1..1
        ok 1 - expect truthy value
    ok 4 - checkExistence should find the instance if not given # time=1.011ms
    
    # Subtest: checkExistence should check the prototype as well
        1..1
        ok 1 - expect truthy value
    ok 5 - checkExistence should check the prototype as well # time=0.984ms
    
    # Subtest: checkDependencies should throw if a dependency is not present
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 6 - checkDependencies should throw if a dependency is not present # time=1.575ms
    
    # Subtest: decorate should internally call checkDependencies
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 7 - decorate should internally call checkDependencies # time=3.282ms
    
    # Subtest: decorate should recognize getter/setter objects
        1..6
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 8 - decorate should recognize getter/setter objects # time=7.727ms
    
    1..8
    # time=196.042ms
}

ok 61 - test/internals/errors.test.js # time=4792.618ms {
    # Subtest: Create error with zero parameter
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - expect truthy value
    ok 1 - Create error with zero parameter # time=11.19ms
    
    # Subtest: Create error with 1 parameter
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - expect truthy value
    ok 2 - Create error with 1 parameter # time=8.053ms
    
    # Subtest: Create error with 2 parameters
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - expect truthy value
    ok 3 - Create error with 2 parameters # time=4.639ms
    
    # Subtest: Create error with 3 parameters
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - expect truthy value
    ok 4 - Create error with 3 parameters # time=1.869ms
    
    # Subtest: Create error with no statusCode property
        1..6
        ok 1 - type is Error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - expect falsey value
        ok 6 - expect truthy value
    ok 5 - Create error with no statusCode property # time=4.435ms
    
    # Subtest: Should throw when error code has no fastify code
        1..1
        ok 1 - should be equal
    ok 6 - Should throw when error code has no fastify code # time=0.633ms
    
    # Subtest: Should throw when error code has no message
        1..1
        ok 1 - should be equal
    ok 7 - Should throw when error code has no message # time=0.761ms
    
    # Subtest: Create error with different base
        1..7
        ok 1 - type is Error
        ok 2 - type is TypeError
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - expect truthy value
    ok 8 - Create error with different base # time=3.246ms
    
    1..8
    # time=173.793ms
}

ok 62 - test/internals/handleRequest.test.js # time=6145.814ms {
    # Subtest: Request object
        1..8
        ok 1 - type is Request
        ok 2 - should be equal
        ok 3 - should be equivalent
        ok 4 - should be equivalent
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equivalent strictly
    ok 1 - Request object # time=7.881ms
    
    # Subtest: handleRequest function - sent reply
        1..1
        ok 1 - should be equal
    ok 2 - handleRequest function - sent reply # time=1.728ms
    
    # Subtest: handleRequest function - invoke with error
        1..1
        ok 1 - should be equal
    ok 3 - handleRequest function - invoke with error # time=1.886ms
    
    # Subtest: handler function - invalid schema
        1..2
        ok 1 - should be equal
        ok 2 - (unnamed test)
    ok 4 - handler function - invalid schema # time=35.663ms
    
    # Subtest: handler function - reply
        1..3
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - (unnamed test)
    ok 5 - handler function - reply # time=2.065ms
    
    # Subtest: handler function - preValidationCallback with finished response
        1..0
    ok 6 - handler function - preValidationCallback with finished response # time=0.596ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/json
        1..8
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - should not error
        ok 8 - should be equal
    ok 7 - request should be defined in onSend Hook on post request with content type application/json # time=399.934ms
    
    # Subtest: request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 8 - request should be defined in onSend Hook on post request with content type application/x-www-form-urlencoded # time=23.436ms
    
    # Subtest: request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - should be equal
    ok 9 - request should be defined in onSend Hook on options request with content type application/x-www-form-urlencoded # time=11.286ms
    
    # Subtest: request should respond with an error if an unserialized payload is sent inside an an async handler
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
    ok 10 - request should respond with an error if an unserialized payload is sent inside an an async handler # time=15.444ms
    
    1..10
    # time=664.013ms
}

ok 63 - test/internals/hookRunner.test.js # time=4716.642ms {
    # Subtest: hookRunner - Basic
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 1 - hookRunner - Basic # time=9.529ms
    
    # Subtest: hookRunner - In case of error should skip to done
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 2 - hookRunner - In case of error should skip to done # time=2.404ms
    
    # Subtest: hookRunner - Should handle promises
        1..9
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should be equal
    ok 3 - hookRunner - Should handle promises # time=72.714ms
    
    # Subtest: hookRunner - In case of error should skip to done (with promises)
        1..7
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
    ok 4 - hookRunner - In case of error should skip to done (with promises) # time=2.996ms
    
    # Subtest: hookRunner - Be able to exit before its natural end
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - hookRunner - Be able to exit before its natural end # time=1.405ms
    
    # Subtest: hookRunner - Promises that resolve to a value do not change the state
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
    ok 6 - hookRunner - Promises that resolve to a value do not change the state # time=3.533ms
    
    # Subtest: onSendHookRunner - Basic
        1..13
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equal
        ok 7 - should be equivalent
        ok 8 - should be equivalent
        ok 9 - should be equal
        ok 10 - should not error
        ok 11 - should be equivalent
        ok 12 - should be equivalent
        ok 13 - should be equal
    ok 7 - onSendHookRunner - Basic # time=16.588ms
    
    # Subtest: onSendHookRunner - Can change the payload
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 8 - onSendHookRunner - Can change the payload # time=3.671ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 9 - onSendHookRunner - In case of error should skip to done # time=2.241ms
    
    # Subtest: onSendHookRunner - Should handle promises
        1..7
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equivalent
        ok 4 - should not error
        ok 5 - should be equivalent
        ok 6 - should be equivalent
        ok 7 - should be equivalent
    ok 10 - onSendHookRunner - Should handle promises # time=3.419ms
    
    # Subtest: onSendHookRunner - In case of error should skip to done (with promises)
        1..6
        ok 1 - should be equivalent
        ok 2 - should be equivalent
        ok 3 - should be equal
        ok 4 - should be equivalent
        ok 5 - should be equivalent
        ok 6 - should be equivalent
    ok 11 - onSendHookRunner - In case of error should skip to done (with promises) # time=4.085ms
    
    # Subtest: onSendHookRunner - Be able to exit before its natural end
        1..2
        ok 1 - should be equivalent
        ok 2 - should be equivalent
    ok 12 - onSendHookRunner - Be able to exit before its natural end # time=1.808ms
    
    1..12
    # time=254.591ms
}

ok 64 - test/internals/hooks.test.js # time=4267.858ms {
    # Subtest: hooks should have 4 array with the registered hooks
        ok 1 - should be equal
        ok 2 - expect truthy value
        ok 3 - expect truthy value
        ok 4 - expect truthy value
        ok 5 - expect truthy value
        ok 6 - expect truthy value
        ok 7 - expect truthy value
        ok 8 - expect truthy value
        1..8
    ok 1 - hooks should have 4 array with the registered hooks # time=9.61ms
    
    # Subtest: hooks.add should add a hook to the given hook
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
        ok 13 - should be equal
        ok 14 - should be equal
        1..14
    ok 2 - hooks.add should add a hook to the given hook # time=4.11ms
    
    # Subtest: hooks should throw on unexisting handler
        1..1
        ok 1 - (unnamed test)
    ok 3 - hooks should throw on unexisting handler # time=1.238ms
    
    # Subtest: should throw on wrong parameters
        1..4
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 4 - should throw on wrong parameters # time=2.122ms
    
    1..4
    # time=186.325ms
}

ok 65 - test/internals/logger.test.js # time=5089.713ms {
    # Subtest: time resolution
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 1 - time resolution # time=3.09ms
    
    # Subtest: The logger should add a unique id for every request
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the id should not be duplicated
        ok 5 - expect truthy value
        ok 6 - should not error
        ok 7 - the id should not be duplicated
        ok 8 - expect truthy value
        ok 9 - should not error
        ok 10 - the id should not be duplicated
        ok 11 - expect truthy value
        ok 12 - should not error
        ok 13 - the id should not be duplicated
        ok 14 - expect truthy value
        ok 15 - should not error
        ok 16 - the id should not be duplicated
        ok 17 - expect truthy value
        ok 18 - should not error
        ok 19 - the id should not be duplicated
        ok 20 - expect truthy value
        ok 21 - should not error
        ok 22 - the id should not be duplicated
        ok 23 - expect truthy value
        ok 24 - should not error
        ok 25 - the id should not be duplicated
        ok 26 - expect truthy value
        ok 27 - should not error
        ok 28 - the id should not be duplicated
        ok 29 - expect truthy value
        ok 30 - should not error
        ok 31 - the id should not be duplicated
        1..31
    ok 2 - The logger should add a unique id for every request # time=53.292ms
    
    # Subtest: The logger should reuse request id header for req.id
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should not error
        ok 4 - the request id from the header should be returned
        1..4
    ok 3 - The logger should reuse request id header for req.id # time=5.058ms
    
    # Subtest: The logger should add a timestamp if logging to stdout
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - responseTime exists
        ok 5 - should not error
    ok 4 - The logger should add a timestamp if logging to stdout # time=71.539ms
    
    # Subtest: The logger should error if both stream and file destination are given
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 5 - The logger should error if both stream and file destination are given # time=1.775ms
    
    1..5
    # time=188.652ms
}

ok 66 - test/internals/plugin.test.js # time=4254.57ms {
    # Subtest: shouldSkipOverride should check the 'skip-override' symbol
        1..2
        ok 1 - expect truthy value
        ok 2 - expect falsey value
    ok 1 - shouldSkipOverride should check the 'skip-override' symbol # time=5.123ms
    
    # Subtest: getMeta should return the object stored with the 'plugin-meta' symbol
        1..1
        ok 1 - should be equivalent
    ok 2 - getMeta should return the object stored with the 'plugin-meta' symbol # time=2.217ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance
        1..1
        ok 1 - Everything ok
    ok 3 - checkDecorators should check if the given decorator is present in the instance # time=1.645ms
    
    # Subtest: checkDecorators should check if the given decorator is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 4 - checkDecorators should check if the given decorator is present in the instance (errored) # time=2.169ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance
        1..1
        ok 1 - Everything ok
    ok 5 - checkDependencies should check if the given dependency is present in the instance # time=0.962ms
    
    # Subtest: checkDependencies should check if the given dependency is present in the instance (errored)
        1..1
        ok 1 - should be equal
    ok 6 - checkDependencies should check if the given dependency is present in the instance (errored) # time=1.482ms
    
    1..6
    # time=131.24ms
}

ok 67 - test/internals/reply.test.js # time=5260.517ms {
    # Subtest: Once called, Reply should return an object with methods
        1..12
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equal
        ok 10 - should be equal
        ok 11 - should be equal
        ok 12 - should be equal
    ok 1 - Once called, Reply should return an object with methods # time=4.909ms
    
    # Subtest: reply.send throw with circular JSON
        1..1
        ok 1 - expected to throw
    ok 2 - reply.send throw with circular JSON # time=0.939ms
    
    # Subtest: reply.serializer should set a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 3 - reply.serializer should set a custom serializer # time=1.417ms
    
    # Subtest: reply.serialize should serialize payload
        1..1
        ok 1 - should be equal
    ok 4 - reply.serialize should serialize payload # time=1.086ms
    
    # Subtest: reply.serialize should serialize payload with a custom serializer
        1..2
        ok 1 - should be equal
        ok 2 - custom serializer not called
    ok 5 - reply.serialize should serialize payload with a custom serializer # time=0.676ms
    
    # Subtest: reply.serialize should serialize payload with Fastify instance
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 6 - reply.serialize should serialize payload with Fastify instance # time=267.729ms
    
    # Subtest: within an instance
        ok 1 - should not error
        # Subtest: custom serializer should be used
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 2 - custom serializer should be used # time=24.126ms
        
        # Subtest: status code and content-type should be correct
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 3 - status code and content-type should be correct # time=4.24ms
        
        # Subtest: auto status code shoud be 200
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 4 - auto status code shoud be 200 # time=5.004ms
        
        # Subtest: auto type shoud be text/plain
            1..3
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equivalent
        ok 5 - auto type shoud be text/plain # time=3.491ms
        
        # Subtest: redirect to `/` - 1
            1..1
            ok 1 - should be equal
        ok 6 - redirect to `/` - 1 # time=2.71ms
        
        # Subtest: redirect to `/` - 2
            1..1
            ok 1 - should be equal
        ok 7 - redirect to `/` - 2 # time=2.301ms
        
        # Subtest: redirect to `/` - 3
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 8 - redirect to `/` - 3 # time=7.13ms
        
        # Subtest: redirect to `/` - 4
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 9 - redirect to `/` - 4 # time=5.443ms
        
        # Subtest: redirect to `/` - 5
            1..3
            ok 1 - should be equal
            ok 2 - should be equal
            ok 3 - should be equal
        ok 10 - redirect to `/` - 5 # time=2.548ms
        
        # Subtest: redirect to `/` - 6
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 11 - redirect to `/` - 6 # time=5.346ms
        
        # Subtest: redirect to `/` - 7
            1..4
            ok 1 - should not error
            ok 2 - should be equal
            ok 3 - should be equal
            ok 4 - should be equivalent
        ok 12 - redirect to `/` - 7 # time=5.437ms
        
        # Subtest: redirect to `/` - 8
            1..1
            ok 1 - should be equal
        ok 13 - redirect to `/` - 8 # time=2.065ms
        
        # Subtest: redirect to `/` - 9
            1..1
            ok 1 - should be equal
        ok 14 - redirect to `/` - 9 # time=2.34ms
        
        1..14
    ok 7 - within an instance # time=98.296ms
    
    # Subtest: buffer without content type should send a application/octet-stream and raw buffer
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 8 - buffer without content type should send a application/octet-stream and raw buffer # time=8.649ms
    
    # Subtest: buffer with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 9 - buffer with content type should not send application/octet-stream # time=6.153ms
    
    # Subtest: stream with content type should not send application/octet-stream
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 10 - stream with content type should not send application/octet-stream # time=10.668ms
    
    # Subtest: stream using reply.res.writeHead should return customize headers
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equivalent
    ok 11 - stream using reply.res.writeHead should return customize headers # time=6.973ms
    
    # Subtest: plain string without content type should send a text/plain
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 12 - plain string without content type should send a text/plain # time=8.308ms
    
    # Subtest: plain string with content type should be sent unmodified
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 13 - plain string with content type should be sent unmodified # time=7.867ms
    
    # Subtest: plain string with content type and custom serializer should be serialized
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 14 - plain string with content type and custom serializer should be serialized # time=8.997ms
    
    # Subtest: plain string with content type application/json should be serialized as json
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equivalent
    ok 15 - plain string with content type application/json should be serialized as json # time=6.3ms
    
    # Subtest: error object with a content type that is not application/json should work
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should not error
        ok 5 - should be equal
        ok 6 - should be equal
    ok 16 - error object with a content type that is not application/json should work # time=10.777ms
    
    # Subtest: undefined payload should be sent as-is
        1..6
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should be equal
        ok 6 - should be equal
    ok 17 - undefined payload should be sent as-is # time=5.906ms
    
    # Subtest: reply.send(new NotFound()) should not invoke the 404 handler
        1..9
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equivalent
        ok 6 - should not error
        ok 7 - should be equal
        ok 8 - should be equal
        ok 9 - should be equivalent
    ok 18 - reply.send(new NotFound()) should not invoke the 404 handler # time=11.44ms
    
    # Subtest: reply can set multiple instances of same header
        1..4
        ok 1 - should not error
        ok 2 - should not error
        ok 3 - expect truthy value
        ok 4 - should be equivalent strictly
    ok 19 - reply can set multiple instances of same header # time=6.512ms
    
    # Subtest: reply.hasHeader returns correct values
        1..3
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
    ok 20 - reply.hasHeader returns correct values # time=7.307ms
    
    # Subtest: reply.getHeader returns correct values
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equivalent strictly
        ok 4 - should be equivalent strictly
    ok 21 - reply.getHeader returns correct values # time=5.327ms
    
    # Subtest: reply.removeHeader can remove the value
        1..5
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equivalent strictly
        ok 5 - (unnamed test)
    ok 22 - reply.removeHeader can remove the value # time=7.91ms
    
    # Subtest: reply.header can reset the value
        1..3
        ok 1 - should not error
        ok 2 - should be equivalent strictly
        ok 3 - (unnamed test)
    ok 23 - reply.header can reset the value # time=6.269ms
    
    # Subtest: Reply should handle JSON content type with a charset
        1..16
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should not error
        ok 4 - should be equal
        ok 5 - should not error
        ok 6 - should be equal
        ok 7 - should not error
        ok 8 - should be equal
        ok 9 - should not error
        ok 10 - should be equal
        ok 11 - should not error
        ok 12 - should be equal
        ok 13 - should not error
        ok 14 - should be equal
        ok 15 - should not error
        ok 16 - should be equal
    ok 24 - Reply should handle JSON content type with a charset # time=7.875ms
    
    # Subtest: Content type and charset set previously
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 25 - Content type and charset set previously # time=4.446ms
    
    # Subtest: .status() is an alias for .code()
        1..2
        ok 1 - should not error
        ok 2 - should be equal
    ok 26 - .status() is an alias for .code() # time=3.128ms
    
    # Subtest: reply.header setting multiple cookies as multiple Set-Cookie headers
        1..7
        ok 1 - should not error
        ok 2 - expect truthy value
        ok 3 - should be equivalent strictly
        ok 4 - should not error
        ok 5 - should not error
        ok 6 - expect truthy value
        ok 7 - should be equivalent strictly
    ok 27 - reply.header setting multiple cookies as multiple Set-Cookie headers # time=8.063ms
    
    # Subtest: should throw error when passing falsy value to reply.sent
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 28 - should throw error when passing falsy value to reply.sent # time=4.901ms
    
    # Subtest: should throw error when attempting to set reply.sent more than once
        1..3
        ok 1 - should be equal
        ok 2 - should not error
        ok 3 - (unnamed test)
    ok 29 - should throw error when attempting to set reply.sent more than once # time=2.722ms
    
    1..29
    # time=595.72ms
}

ok 68 - test/internals/validation.test.js # time=4500.235ms {
    # Subtest: Symbols
        1..5
        ok 1 - should be equal
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
        ok 5 - should be equal
    ok 1 - Symbols # time=3.44ms
    
    # Subtest: build schema - missing schema
        1..1
        ok 1 - should be equal
    ok 2 - build schema - missing schema # time=1.146ms
    
    # Subtest: build schema - missing output schema
        1..1
        ok 1 - should be equal
    ok 3 - build schema - missing output schema # time=1.173ms
    
    # Subtest: build schema - output schema
        1..2
        ok 1 - should be equal
        ok 2 - should be equal
    ok 4 - build schema - output schema # time=26.643ms
    
    # Subtest: build schema - payload schema
        1..1
        ok 1 - should be equal
    ok 5 - build schema - payload schema # time=10.922ms
    
    # Subtest: build schema - querystring schema
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 6 - build schema - querystring schema # time=0.99ms
    
    # Subtest: build schema - querystring schema abbreviated
        1..2
        ok 1 - type is string
        ok 2 - should be equal
    ok 7 - build schema - querystring schema abbreviated # time=1.716ms
    
    # Subtest: build schema - params schema
        1..1
        ok 1 - should be equal
    ok 8 - build schema - params schema # time=4.615ms
    
    # Subtest: build schema - headers schema
        1..1
        ok 1 - should be equal
    ok 9 - build schema - headers schema # time=1.269ms
    
    # Subtest: build schema - headers are lowercase
        1..1
        ok 1 - lowercase content-type exists
    ok 10 - build schema - headers are lowercase # time=0.881ms
    
    # Subtest: build schema - headers are not lowercased in case of custom object
        1..1
        ok 1 - type is Headers
    ok 11 - build schema - headers are not lowercased in case of custom object # time=1.357ms
    
    1..11
    # time=169.604ms
}

1..68
# time=59370.406ms
